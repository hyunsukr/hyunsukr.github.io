knitr::opts_chunk$set(echo = TRUE, highlight=FALSE)
vector_1 <- c('a', 'a', 'a', 'a')
print(vector_1)
vector_1
vector_1 <- c('a', 'a', 'a', 'a')
vector_1
vector_1 <- c('a', 'a', 'a', 'a')
vector_1
vector_1 <- c('a', 'a', 'a', 'a')
vector_1
vector_1 <- c('a', 'a', 'a', 'a')
print(vector_1)
rep(1:5, 2)
labs <- c(seq(1,4), 0)
labs <- c(seq(1,4), 0)
labs <- c(seq(1,4), 0)
labs <- c(1:4, 0)
labs
seq(1,5, 0.5)
vector_2 <- (2,100,2)
vector_2 <- (2,100),2)
vector_2 <- seq(2,100),2)
vector_2 <- seq(2,100,2)
print(vector_2)
vector_2 <- seq(2,100,2)
print(vector_2)
vector_2 <- seq(2,100,2)
print(vector_2)
rep(1:5, c(1,2,3,2,1))
rep(1:5, c(1,2,3,2,1))
vector_3 <- rep(1:4, c(4,4,3,2))
print(vector_3)
vector_4 <- rep(7:4, 3)
print(vector_4)
rep(1:5, 2)
#one ones two twos 3 threes 2 fours 1 five
rep(1:5, c(1,2,3,2,1))
#each index gets repeated #
rep(1:5, each=2)
vector_4 <- rep(7:4, each=3)
print(vector_4)
vector_5 <- seq(1:10)
print(vector_5)
vector_5 <- c(1:5)
print(vector_5)
vector_5 <- c(1:5)
vector_5 <- c(5:1)
print(vector_5)
vector_5 <- c(1:5, 4:1)
print(vector_5)
vector_6 <- 1/(1:10)
vector_6 <- 1/(1:10)
print(vector_6)
vector_7 <- (1:6)^3
print(vector_7)
vector_8 <- c(1964:2003, 3)
print(vector_8)
vector_8 <- seq(1964:2003, 3)
vector_8 <- seq(1964,2003, 3)
print(vector_8)
```{r}
vector_9 <- seq(1000,0,25)
vector_9 <- seq(1000,0,-25)
print(vector_9)
gender <- c("M","F","F","M")
gender
knitr::opts_chunk$set(echo = TRUE, highlight=FALSE)
depart_800 <- c(26, 35, 24, 31, 34)
depart_830 <- c(22, 23, 36, 32, 25)
depart_800 <- c(26, 35, 24, 31, 34)
depart_830 <- c(22, 23, 36, 32, 25)
print(depart_800)
print(depart_830)
names(depart_800) <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
names(depart_830) <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
print(depart_800)
print(depart_830)
which(x>3) #positions where ths parameter satisfies #
x[which(x>3)] #get the values #
x
x
## Are any elements greater than 1?
x > 1 #This returns the logic value for all index which this statment satisfies #
## Create vectors of interest
x <- c(14,1,1,14)
y <- c(3,1,0,6)
## Multiply each element pair
x*y
diffoftimes <- depart_830 - depart_800
which(diffoftimes>0)
diffoftimes <- depart_830 - depart_800
faster_830 <- which(diffoftimes>0)
print(faster_830)
diffoftimes <- depart_830 - depart_800
faster_830 <- which(diffoftimes>0)
print(faster_830)
diffoftimes <- depart_830 - depart_800
faster_830 <- diffoftimes(which(diffoftimes>0))
diffoftimes <- depart_830 - depart_800
faster_830 <- diffoftimes[which(diffoftimes>0)]
print(faster_830)
depart_830 > depart_800
diffoftimes <- depart_830 < depart_800
print(diffoftimes)
diff_800 <- 27 - depart_800
diff_830 <- 27 - depart_830
print(diff_800)
print(diff_830)
diff_800 <- depart_800 - 27
diff_830 <- depart_830 - 27
print(diff_800)
print(diff_830)
avg_diff_800 <- avg(diff_800)
avg_diff_800 <- mean(diff_800)
avg_diff_830 <- mean(diff_830)
print(avg_diff_800)
print(avg_diff_830)
max_delay_800 <- max(diff_800)
max_delay_830 <- max(diff_830)
print(max_delay_800)
print(max_delay_830)
max_delay_800 <- max(diff_800)
max_delay_830 <- max(diff_830)
print(max_delay_800)
print(max_delay_830)
fastest_800 <- min(depart_800)
print(fastest_800)
which(depart_800 == fasteset_800)
fastest_800 <- min(depart_800)
print(fastest_800)
which(depart_800 == fastest_800)
which(depart_800 == fastest_800)[1]
which(depart_800 == fastest_800)[1]
names(which(depart_800 == fastest_800))
fastest_800 <- min(depart_800)
fastest_day_800 <- names(which(depart_800 == fastest_800))
print(fastest_day_800)
dayslessthan30 <- names(which(depart_830 > 30))
print(dayslessthan30)
dayslessthan30 <- names(which(depart_830 < 30))
print(dayslessthan30)
dayslessthan30 <- names(which(depart_830 <= 30))
print(dayslessthan30)
howearly_depart830_lessthan30 <- which(27 - dayslessthan30_depart830)
dayslessthan30_depart830 <- depart_830[which(depart_830 <= 30)]
howearly_depart830_lessthan30 <- which(27 - dayslessthan30_depart830)
dayslessthan30_depart830 <- depart_830[which(depart_830 <= 30)]
howearly_depart830_lessthan30 <- 27 - dayslessthan30_depart830
print(howearly_depart830_lessthan30)
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, highlight=FALSE)
```
## Problem 1
### Part a
```{r}
vector_1 <- c('a', 'a', 'a', 'a')
print(vector_1)
```
I've concatentated 'a' four times.
### Part b
```{r}
vector_2 <- seq(2,100,2)
print(vector_2)
```
I made a sequence from 2 to 100 incrementing by 2. I stored this in vector_2 and printed it.
### Part c
```{r}
vector_3 <- rep(1:4, c(4,4,3,2))
print(vector_3)
```
I used the rep function to make '1' output four times, '2' output 4 times, '3' output 3 times, '4' output 2 times
### Part d
```{r}
vector_4 <- rep(7:4, each=3)
print(vector_4)
```
I used the rep function and made each element repeat 3 times to get the output.
### Part e
```{r}
vector_5 <- c(1:5, 4:1)
print(vector_5)
```
I contacted 1-5 and then 4-1 into one vector using the c() function
### Part f
```{r}
vector_6 <- seq(1:10)
print(vector_6)
```
I used the sequence from 1 to 10 and stored it in vector 5
### Part g
```{r}
vector_6 <- 1/(1:10)
print(vector_6)
```
I made a vector containing the sequence of 1/(1..10). I made each number in the sequence of 1:10 a denominator for division of 1.
### Part f
```{r}
vector_7 <- (1:6)^3
print(vector_7)
```
While making vector 7, I cubed (^3) each element in the sequence 1-6. I stored all the values in the vector
### Part i
```{r}
vector_8 <- seq(1964,2003, 3)
print(vector_8)
```
Made a sequence from 1964 - 2003 with spacing of 3. I set this sequence as vector_8
### Part j
```{r}
vector_9 <- seq(1000,0,-25)
print(vector_9)
```
Made a sequence from 1000 - 0 with increment of (-25). This sequence is set as vector_9
## Problem 2
### Part a
```{r}
depart_800 <- c(26, 35, 24, 31, 34)
depart_830 <- c(22, 23, 36, 32, 25)
print(depart_800)
print(depart_830)
```
I made a vector for 800 and 830 starting with Monday going to Friday.
### Part b
```{r}
names(depart_800) <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
names(depart_830) <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
print(depart_800)
print(depart_830)
```
Added names of each index with the names function from the first reference in References.
### Part c
```{r}
diffoftimes <- depart_830 < depart_800
print(diffoftimes)
```
I made a vector called diffoftimes that compared whether departing at 830 took less time than 800. The truth values of this equality was stored in diffoftimes.
### Part d
```{r}
diff_800 <- depart_800 - 27
diff_830 <- depart_830 - 27
print(diff_800)
print(diff_830)
```
I made a vector called diff_800 that took the difference of time it actually took and 27 mintues (Budget time). This was stored in for Monday - Friday. The same process took place in constructing diff_830. Actual - Budget = value for Monday - Friday.
### Part e
```{r}
avg_diff_800 <- mean(diff_800)
avg_diff_830 <- mean(diff_830)
print(avg_diff_800)
print(avg_diff_830)
```
The average for difference in time for 8:00 Departure was 3 minutes. The avergae of for difference in time for 8:30 Departure was 0.6 minutes. I did this by getting the mean of the difference of time vector for 800 and 830, and stored them in avg_diff_800 and avg_diff_830 respectivly.
### Part f
```{r}
max_delay_800 <- max(diff_800)
max_delay_830 <- max(diff_830)
print(max_delay_800)
print(max_delay_830)
```
The max delay for 8:00 was 8 minutes, while the max delay for 8:30 was 9 minutes. I calculated this by getting the max of diff_800 and diff_830 vector and storing it in a variable.
### Part g
```{r}
fastest_800 <- min(depart_800)
fastest_day_800 <- names(which(depart_800 == fastest_800))
print(fastest_day_800)
```
In the first week she arrived the fastest on Wednesday. I found this by getting the minimum of depart_800 and getting the name of the entry that was the minuimum of depart_800 through the name function.
### Part h
```{r}
dayslessthan30 <- names(which(depart_830 <= 30))
print(dayslessthan30)
```
The days that took less than 30 minutes to commute for the second week were "Monday", "Tuesday", and "Friday". I found this by getting which indicies were less than or equal to 30 minutes. I then proceeded to only take the names of the indicies.
### Part i
```{r}
dayslessthan30_depart830 <- depart_830[which(depart_830 <= 30)]
howearly_depart830_lessthan30 <- 27 - dayslessthan30_depart830
print(howearly_depart830_lessthan30)
```
On the days she arrived less than 30 minutes for the second week. She arrived 5 minutes earlier on monday, 4 minutes earlier on tuesday, and 2 minutes earlier on friday. I found this by first getting the indicies that were less than 30 from depart 830. then I subtracted the budget time of 27 to see how much less time it took.
### Part j
```{r}
```
knitr::opts_chunk$set(echo = TRUE, highlight=FALSE)
above27_800 <- depart_800[which(depart_800 <= 27)]
print(above27_800)
above27_800 <- depart_800 <= 27
print(above27_800)
above27_800 <- depart_800 <= 27
print(above27_800)
above27_830 <- depart_830 <= 27
print(above27_830)
above27_800 <- depart_800 <= 27
print(above27_800)
above27_830 <- depart_830 <= 27
print(above27_830)
similar <- above27_800 == above27_830
print(similar)
above27_800 <- depart_800 <= 27
print(above27_800)
above27_830 <- depart_830 <= 27
print(above27_830)
similar <- above27_800 == above27_830
dayssimilar <- similar[which(similar == 'TRUE')]
print(dayssimilar)
above27_800 <- depart_800 <= 27
print(above27_800)
above27_830 <- depart_830 <= 27
print(above27_830)
similar <- above27_800 == above27_830
dayssimilar <- names(similar[which(similar == 'TRUE')])
print(dayssimilar)
above27_800 <- depart_800 <= 27
above27_830 <- depart_830 <= 27
similar <- above27_800 == above27_830
dayssimilar <- names(similar[which(similar == 'TRUE')])
print(dayssimilar)
