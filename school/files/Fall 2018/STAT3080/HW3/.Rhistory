DavisPlot + geom_point() + geom_smooth()
smooth_crash <- crash_handheld + geom_point() + geom_smooth(se=F)
print(smooth_crash)
smooth_crash <- crash_handheld + geom_point() + geom_smooth(se=F)
print(smooth_crash)
smooth_crash <- crash_handheld + geom_point() + geom_smooth()
print(smooth_crash)
smooth_crash <- crash_handheld + geom_point() + geom_smooth(se=F)
print(smooth_crash)
smooth_crash <- crash_handheld + geom_point() + geom_smooth(method=lm)
print(smooth_crash)
## Changing color of confidence bands
DavisPlot + geom_point() + geom_smooth(method=lm, fill="blue", colour="red")
DavisPlot + geom_point() + geom_smooth(method=lm, alpha=0.2)
smooth_crash <- crash_handheld + geom_point() + geom_smooth(method=lm,alpha=0.2)
print(smooth_crash)
print(smooth_crash)
smooth_crash <- crash_handheld + geom_point() + geom_smooth(method=lm,alpha=0.2, colour=Hand.held.ban)
smooth_crash <- crash_handheld + geom_point() + geom_smooth(method=lm,alpha=0.2, colour="Hand.held.ban"")
print(smooth_crash)
smooth_crash <- crash_handheld + geom_point() + geom_smooth(method=lm,alpha=0.2, colour="Hand.held.ban")
ggplot(Davis, aes(x=weight, y=repwt, colour=sex)) + geom_point() +
geom_smooth(method=lm)
smooth_crash <- crash_handheld + geom_point() + geom_smooth(method=lm,alpha=0.2, fill=Hand.held.ban)
smooth_crash <- crash_handheld + geom_point() + geom_smooth(method=lm,alpha=0.2, fill="Hand.held.ban")
print(smooth_crash)
smooth_crash <- crash_handheld + geom_point() + geom_smooth(method=lm, se=F)
print(smooth_crash)
smooth_crash <- crash_handheld + geom_point() + geom_smooth(method=lm,alpha=0.2, fill="red")
print(smooth_crash)
smooth_crash <- crash_handheld + geom_point() + geom_smooth(aes(fill=Hand.held.ban), method=lm,alpha=0.2)
print(smooth_crash)
smooth_crash <- crash_handheld + geom_point() + geom_smooth(aes(fill=as.character(Hand.held.ban)), method=lm,alpha=0.2)
print(smooth_crash)
smooth_crash <- crash_handheld + geom_point() + geom_smooth(aes(fill=as.character(Hand.held.ban)), method=lm,alpha=0.2) + scale_colour_manual("Hand.held.ban", values=c("1"="green","2"="orange", "3"="brown"))
smooth_crash <- crash_handheld + geom_point() + geom_smooth(aes(fill=as.character(Hand.held.ban)), method=lm,alpha=0.2) +
print(smooth_crash)
smooth_crash <- crash_handheld + geom_point() + geom_smooth(aes(fill=as.character(Hand.held.ban)), method=lm,alpha=0.2)
print(smooth_crash)
smooth_crash <- crash_handheld + geom_point() + geom_smooth(aes(fill=as.character(Hand.held.ban)), method=lm,alpha=0.2) + scale_colour_manual("Hand.held.ban", values=c("1"="green","2"="orange", "3"="brown"))
print(smooth_crash)
smooth_crash <- crash_handheld + geom_smooth(aes(fill=as.character(Hand.held.ban)), method=lm,alpha=0.2) + scale_colour_manual("Hand.held.ban", values=c("1"="green","2"="orange", "3"="brown"))
smooth_crash <- crash_plot + geom_point(shape=23) + geom_smooth(aes(fill=as.character(Hand.held.ban)), method=lm,alpha=0.2) + scale_colour_manual("Hand.held.ban", values=c("1"="green","2"="orange", "3"="brown"))
print(smooth_crash)
smooth_crash <- crash_handheld + geom_point() + geom_smooth(aes(fill=as.character(Hand.held.ban)), method=lm,alpha=0.2)
print(smooth_crash)
smooth_crash <- geom_smooth(aes(fill=as.character(Hand.held.ban)), method=lm,alpha=0.2)+ crash_handheld + geom_point()
smooth_crash <- crash_handheld + geom_smooth(aes(fill=as.character(Hand.held.ban)), method=lm,alpha=0.2) + geom_point()
print(smooth_crash)
smooth_crash <- crash_handheld + geom_point() + geom_smooth(aes(fill=as.character(Hand.held.ban)), method=lm,alpha=0.2)
print(smooth_crash)
smooth_crash <- crash_handheld + geom_point() + geom_smooth(method=lm,alpha=0.2)
print(smooth_crash)
smooth_crash <- crash_handheld + geom_point() + geom_smooth(fill=as.character(Hand.held.ban)method=lm,alpha=0.2)
smooth_crash <- crash_handheld + geom_point() + geom_smooth(fill=as.character(Hand.held.ban),method=lm,alpha=0.2)
smooth_crash <- crash_handheld + geom_point() + geom_smooth(method=lm, se=F) + scale_fill_manual("Hand.held.ban", values=c("1"="green","2"="orange", "3"="brown"))
print(smooth_crash)
smooth_crash <- crash_handheld + geom_point() + geom_smooth(method=lm, se=F) + scale_fill_manual(values=c("#FF6666"))
print(smooth_crash)
smooth_crash <- crash_handheld + geom_point() + geom_smooth(aes(fill=as.character(Hand.held.ban)), method=lm,alpha=0.2) + scale_fill_manual(values=c("#FF6666"))
print(smooth_crash)
smooth_crash <- crash_handheld + geom_point() + geom_smooth(aes(fill=as.character(Hand.held.ban)), method=lm,alpha=0.2) + scale_fill_manual("Hand.held.ban", values=c("1"="green","2"="orange", "3"="brown"))
print(smooth_crash)
smooth_crash <- crash_handheld + geom_point() + geom_smooth(method=lm,alpha=0.2) + scale_fill_manual("Hand.held.ban", values=c("1"="green","2"="orange", "3"="brown"))
print(smooth_crash)
smooth_crash1 <- crash_handheld + geom_point() + geom_smooth(aes(fill=as.character(Hand.held.ban)), method=lm,alpha=0.2) + scale_fill_manual("Hand.held.ban", values=c("1"="green","2"="orange", "3"="brown"))
print(smooth_crash1)
smooth_crash <- crash_handheld + geom_point() + geom_smooth(se=F)
print(smooth_crash)
smooth_crash <- crash_handheld + geom_point() + geom_smooth(method=lm, se=F)
print(smooth_crash)
smooth_crash1 <- crash_handheld + geom_point() + geom_smooth(aes(fill=as.character(Hand.held.ban)), method=lm,alpha=0.2) + scale_fill_manual("Hand.held.ban", values=c("1"="green","2"="orange", "3"="brown"))
print(smooth_crash1)
smooth_crash_reg <- crash_handheld + geom_point() + geom_smooth(method=lm, se=F)
print(smooth_crash_reg)
smooth_crash <- crash_handheld + geom_point() + geom_smooth(se=F)
print(smooth_crash)
smooth_blue <- smooth_crash_reg
print(smooth_blue)
smooth_blue <- smooth_crash_reg + geom_smooth(method=lm, se=F)
print(smooth_blue)
smooth_blue <- smooth_crash_reg + crash+geom_smooth(method=lm, se=F)
smooth_blue <- smooth_crash_reg + crash_plot+geom_smooth(method=lm, se=F)
smooth_blue <- crash_plot + smooth_crash_reg  + geom_smooth(method=lm, se=F)
smooth_blue <- crash_plot + geom_smooth(method=lm, se=F)
print(smooth_blue)
smooth_blue <- ggplot(crash, aes(x=Fatal.crashes, y=Licensed.drivers) + geom_smooth(method=lm, se=F)
print(smooth_blue)
smooth_blue <- ggplot(crash, aes(x=Fatal.crashes, y=Licensed.drivers)) + geom_smooth(method=lm, se=F)
print(smooth_blue)
smooth_blue <- ggplot(crash, aes(x=Fatal.crashes, y=Licensed.drivers)) + geom_smooth(method=lm, se=F) + smooth_crash_reg
smooth_blue <- ggplot(crash, aes(x=Fatal.crashes, y=Licensed.drivers)) + geom_smooth(method=lm, se=F)
print(smooth_blue)
smooth_blue <- ggplot(crash, aes(x=Fatal.crashes, y=Licensed.drivers)) + geom_smooth(method=lm, se=F)
smooth_blue <- ggplot(crash, aes(x=Fatal.crashes, y=Licensed.drivers)) + geom_smooth(method=lm, se=F)
final <- smooth_blue + smooth_crash_reg
smooth_blue <- ggplot(crash, aes(x=Fatal.crashes, y=Licensed.drivers)) + geom_smooth(method=lm, se=F)
final <- grid.arrange(smooth_blue,smooth_crash_reg)
install.packages("gridExtra")
library(gridExtra)
install.packages("gridExtra")
smooth_blue <- ggplot(crash, aes(x=Fatal.crashes, y=Licensed.drivers)) + geom_smooth(method=lm, se=F)
final <- grid.arrange(smooth_blue,smooth_crash_reg)
print(final)
print(smooth_blue)
knitr::opts_chunk$set(echo = TRUE, highlight=FALSE)
smooth_blue <- ggplot(crash, aes(x=Fatal.crashes, y=Licensed.drivers))
library(ggplot2)
smooth_blue <- ggplot(crash, aes(x=Fatal.crashes, y=Licensed.drivers))
library(ggplot2)
library(car)
library(gcookbook)
library(MASS)
library(Hmisc)
crash <- read.csv("state crashes.csv")
crash_plot <- ggplot(crash, aes(x=Fatal.crashes, y=Licensed.drivers)) + geom_point(shape=23)
print(crash_plot)
smooth_crash1 <- crash_handheld + geom_point() + geom_smooth(aes(fill=as.character(Hand.held.ban)), method=lm,alpha=0.2) + scale_fill_manual("Hand.held.ban", values=c("1"="green","2"="orange", "3"="brown"))
crash_plot <- ggplot(crash, aes(x=Fatal.crashes, y=Licensed.drivers, colour=as.character(Hand.held.ban)))
crash_handheld <- crash_plot + geom_point(shape=23) + scale_colour_manual("Hand.held.ban", values=c("1"="green","2"="orange", "3"="brown"))
print(crash_handheld)
smooth_crash <- crash_handheld + geom_point() + geom_smooth(se=F)
print(smooth_crash)
smooth_crash_reg <- crash_handheld + geom_point() + geom_smooth(method=lm, se=F)
print(smooth_crash_reg)
smooth_crash1 <- crash_handheld + geom_point() + geom_smooth(aes(fill=as.character(Hand.held.ban)), method=lm,alpha=0.2) + scale_fill_manual("Hand.held.ban", values=c("1"="green","2"="orange", "3"="brown"))
print(smooth_crash1)
smooth_blue <- ggplot(crash, aes(x=Fatal.crashes, y=Licensed.drivers))
+ geom_smooth(method=lm, se=F) + smooth_crash1
smooth_blue <- ggplot(crash, aes(x=Fatal.crashes, y=Licensed.drivers)) + geom_smooth(method=lm, se=F) + smooth_crash1
smooth_blue <- ggplot(crash, aes(x=Fatal.crashes, y=Licensed.drivers)) + geom_smooth(method=lm, se=F)
smooth_blue <- ggplot(crash, aes(x=Fatal.crashes, y=Licensed.drivers)) + geom_smooth(method=lm, se=F)
print(smooth_blue)
smooth_blue <- ggplot(crash, aes(x=Fatal.crashes, y=Licensed.drivers)) + geom_smooth(method=lm, se=F) +geom_point()
print(smooth_blue)
smooth_blue <- crash_plot + geom_smooth(method=lm, se=F) +geom_point()
print(smooth_blue)
smooth_blue <- crash_plot + geom_smooth(method=lm, se=F)
print(smooth_blue)
smooth_blue <- smooth_crash_reg+ geom_smooth(method=lm, se=F)
print(smooth_blue)
smooth_blue <- crash_plot + geom_smooth(method=lm, se=F)
print(smooth_blue)
smooth_blue <- ggplot(crash, aes(x=Fatal.crashes, y=Licensed.drivers)) + geom_smooth(method=lm, se=F)
print(smooth_blue)
smooth_blue <- ggplot(crash, aes(x=Fatal.crashes, y=Licensed.drivers)) + geom_smooth(method=lm, se=F) + crash_plot
smooth_blue <- ggplot(crash, aes(x=Fatal.crashes, y=Licensed.drivers)) + geom_smooth(method=lm, se=F) + crash_handheld
smooth_blue <- ggplot(crash, aes(x=Fatal.crashes, y=Licensed.drivers)) + geom_smooth(method=lm, se=F)
print(smooth_blue)
smooth_blue <- ggplot(crash, aes(x=Fatal.crashes, y=Licensed.drivers)) + geom_smooth(method=lm, se=F) + ggplot(crash, aes(x=Fatal.crashes, y=Licensed.drivers, colour=as.character(Hand.held.ban)))
smooth_blue <- ggplot(crash, aes(x=Fatal.crashes, y=Licensed.drivers)) + geom_smooth(method=lm, se=F)
print(smooth_blue)
crash_handheld + geom_point()
smooth_blue <- ggplot(crash, aes(x=Fatal.crashes, y=Licensed.drivers)) + geom_smooth(method=lm, se=F) + crash_handheld + geom_point()
crash_handheld + geom_point()
crash_handheld
crash_handheld +geom_smooth(method=lm, se=F)+ geom_point()
smooth_blue <- ggplot(crash, aes(x=Fatal.crashes, y=Licensed.drivers)) + geom_smooth(method=lm, se=F) + geom_point()
print(smooth_blue)
smooth_crash1
smooth_crash1 + ggplot(crash, aes(x=Fatal.crashes, y=Licensed.drivers))
smooth_crash1
smooth_crash1 + geom_smooth(data = crash, method=lm, se=F) + geom_point()
smooth_crash1 + geom_smooth(data = crash_plot, method=lm, se=F) + geom_point()
smooth_crash1 + geom_smooth(data = crash, aes(x=Fatal.crashes, y=Licensed.drivers)), method=lm, se=F) + geom_point()
smooth_crash1 + geom_smooth(data = crash, aes(x=Fatal.crashes, y=Licensed.drivers), method=lm, se=F) + geom_point()
smooth_crash1 + geom_smooth(data = crash, aes(x=Fatal.crashes, y=Licensed.drivers), method=lm, fill="blue", se=F) + geom_point()
smooth_crash1 + geom_smooth(data = crash) + geom_point()
smooth_crash1 + geom_smooth(data = crash, se=F) + geom_point()
smooth_crash_reg
smooth_crash1
smooth_crash1 + geom_smooth(data = crash, se=F) + geom_point()
smooth_crash1 + geom_smooth(data = crash, se=F) + geom_point()
smooth_crash1 + geom_smooth(data = crash,aes(x=Fatal.crashes, y=Licensed.drivers) se=F) + geom_point()
smooth_crash1 + geom_smooth(data = crash,aes(x=Fatal.crashes, y=Licensed.drivers), se=F) + geom_point()
smooth_crash1 + geom_smooth(data = crash, se=F) + geom_point()
smooth_blue <- ggplot(crash, aes(x=Fatal.crashes, y=Licensed.drivers)) + geom_smooth(method=lm, se=F) + geom_point()
print(smooth_blue)
ggplot(crash, aes(x=Fatal.crashes, y=Licensed.drivers, colour=as.character(Hand.held.ban))) + geom_smooth(data = crash, se=F) + geom_point()
ggplot(crash, aes(x=Fatal.crashes, y=Licensed.drivers, colour=as.character(Hand.held.ban))) + geom_smooth(se=F) + geom_point()
ggplot(crash, aes(x=Fatal.crashes, y=Licensed.drivers, colour=as.character(Hand.held.ban))) + geom_smooth(data = crash, se=F) + geom_point()
ggplot(crash, aes(x=Fatal.crashes, y=Licensed.drivers, colour=as.character(Hand.held.ban))) + geom_smooth(data = crash, se=F)
ggplot(crash, aes(x=Fatal.crashes, y=Licensed.drivers) + geom_smooth(data = crash, se=F)
ggplot(crash, aes(x=Fatal.crashes, y=Licensed.drivers)) + geom_smooth(data = crash, se=F)
ggplot(crash, aes(x=Fatal.crashes, y=Licensed.drivers)) + geom_smooth(se=F)
ggplot(crash, aes(x=Fatal.crashes, y=Licensed.drivers)) + geom_smooth(method=lm, se=F)
geom_smooth(method=lm, se=F)
smooth_crash1 + geom_smooth(method=lm, se=F)
geom_smooth(method=lm, se=F)
ggplot(crash, aes(x=Fatal.crashes, y=Licensed.drivers)) + geom_smooth(method=lm, se=F)
smooth_crash1 + ggplot(crash, aes(x=Fatal.crashes, y=Licensed.drivers)) + geom_smooth(method=lm, se=F)
smooth_crash1
smooth_crash1
smooth_crash1 + geom_smooth(method = 'lm', aes(colour = NA), colour = 'magenta')
smooth_crash1 + geom_smooth(method = 'lm', aes(colour = NA), colour = 'blue')
smooth_crash1 + geom_smooth(method = 'lm', aes(colour = NA), colour = 'blue', se=F)
print(all_lm)
all_lm <- smooth_crash1 + geom_smooth(method = 'lm', aes(colour = NA), colour = 'blue', se=F)
print(all_lm)
smooth_crash1 <- crash_handheld + geom_point() + geom_smooth(aes(fill=as.character(Hand.held.ban)), method=lm,alpha=0.2)
+ scale_fill_manual("Hand.held.ban", values=c("1"="green","2"="orange", "3"="brown"))
smooth_crash1 <- crash_handheld + geom_point() + geom_smooth(aes(fill=as.character(Hand.held.ban)), method=lm,alpha=0.2) + scale_fill_manual("Hand.held.ban", values=c("1"="green","2"="orange", "3"="brown"))
print(smooth_crash1)
smooth_crash1 <- crash_handheld + geom_point() + geom_smooth(aes(fill=as.character(Hand.held.ban)),
method=lm,alpha=0.2) + scale_fill_manual("Hand.held.ban", values=c("1"="green","2"="orange", "3"="brown"))
print(smooth_crash1)
smooth_crash_reg <- crash_handheld
+ geom_point() + geom_smooth(method=lm, se=F)
crash_plot <- ggplot(crash, aes(x=Fatal.crashes, y=Licensed.drivers, colour=as.character(Hand.held.ban)))
crash_handheld <- crash_plot + geom_point(shape=23) + scale_colour_manual("Hand.held.ban",
values=c("1"="green","2"="orange", "3"="brown"))
print(crash_handheld)
all_lm <- smooth_crash1 + geom_smooth(method = 'lm', aes(colour = NA), colour = 'blue', se=F)
print(all_lm)
smooth_crash_reg <- crash_handheld + geom_point() + geom_smooth(
method=lm, se=F)
print(smooth_crash_reg)
smooth_crash_reg <- crash_handheld + geom_point(
) + geom_smooth(method=lm, se=F)
print(smooth_crash_reg)
smooth_crash_reg <-
crash_handheld + geom_point() + geom_smooth(method=lm, se=F)
print(smooth_crash_reg)2
smooth_crash_reg <- crash_handheld + geom_point() + geom_smooth(method=lm, se=F)
print(smooth_crash_reg)
crash_plot <- ggplot(crash, aes(x=Fatal.crashes, y=Licensed.drivers, colour=as.character(Hand.held.ban)))
crash_handheld <- crash_plot + geom_point(shape=23) + scale_colour_manual("Hand.held.ban",
values=c("1"="green","2"="orange", "3"="brown"))
print(crash_handheld)
crash_plot <- ggplot(crash, aes(x=Fatal.crashes, y=Licensed.drivers, colour=as.character(Hand.held.ban)))
crash_handheld <- crash_plot + geom_point(shape=23) + scale_colour_manual("Hand.held.ban",
values=c("1"="green","2"="orange", "3"="brown"))
print(crash_handheld)
knitr::opts_chunk$set(echo = TRUE, highlight=FALSE)
library(ggplot2)
library(car)
library(gcookbook)
library(MASS)
library(Hmisc)
crash <- read.csv("state crashes.csv")
crash_plot <- ggplot(crash, aes(x=Fatal.crashes, y=Licensed.drivers)) + geom_point(shape=23)
print(crash_plot)
crash_plot <- ggplot(crash, aes(x=Fatal.crashes, y=Licensed.drivers, colour=as.character(Hand.held.ban)))
crash_handheld <- crash_plot + geom_point(shape=23) + scale_colour_manual("Hand.held.ban",
values=c("1"="green","2"="orange", "3"="brown"))
print(crash_handheld)
smooth_crash <- crash_handheld + geom_point() + geom_smooth(se=F)
print(smooth_crash)
smooth_crash_reg <- crash_handheld + geom_point() + geom_smooth(method=lm, se=F)
print(smooth_crash_reg)
smooth_crash1 <- crash_handheld + geom_point() + geom_smooth(aes(fill=as.character(Hand.held.ban)),
method=lm,alpha=0.2) + scale_fill_manual("Hand.held.ban", values=c("1"="green","2"="orange", "3"="brown"))
print(smooth_crash1)
all_lm <- smooth_crash1 + geom_smooth(method = 'lm', aes(colour = NA), colour = 'blue', se=F)
print(all_lm)
all_lm <- smooth_crash1 + geom_smooth(method = 'lm',
aes(colour = NA), colour = 'blue', se=F)
print(all_lm)
countries <- nym2002[which(nchar(as.character(nym2002$home)) ==3),]
setwd("/Users/maxryoo/Documents/Fall 2018/STAT3080/HW3")
nym2002 <- read.table("nym2002.txt", header=TRUE)
print(nym2002[1:5,])
num_finishers <- nrow(nym2002)
print(num_finishers)
youngest <- min(nym2002$age)
oldest <- max(nym2002$age)
print(youngest)
print(oldest)
fastest <- nym2002[which(nym2002$time == min(nym2002$time)),]$age
slowest <- nym2002[which(nym2002$time == max(nym2002$time)),]$age
print(c("slowest: ", slowest ," fastest: ", fastest))
us_finisher <- nym2002[which(nchar(as.character(nym2002$home)) ==2),]
num_us <- nrow(us_finisher)
print(num_us)
oldest <- nym2002[which(nym2002$time == max(nym2002$time)),]$age
best_time_older <- min(nym2002[which(nym2002$age > oldest), ]$time)
old_position <- nym2002[which(nym2002$time == best_time_older), ]$place
print(old_position)
position_fastest <- nym2002[which(nym2002$time == min(nym2002$time)),]$place
print(position_fastest)
countries <- nym2002[which(nchar(as.character(nym2002$home)) ==3),]
unqiue_countries<- c(as.character(unique(countries$home)), "US")
print(length(unqiue_countries))
state.abb
countries <- nym2002[which(nchar(as.character(nym2002$home)) == 3),]
unqiue_countries<- c(as.character(unique(countries$home)), "US")
print(length(unqiue_countries))
## Look at birthwt data (in MASS package)
birthwt[1:5,]
## Label race values in data
bwdata <- birthwt
bwdata$race <- factor(bwdata$race, labels=c("white","black","other"))
## Create boxplots for birth weights separated by mother's race
bxplot <- ggplot(bwdata, aes(x=race, y=bwt))
bxplot + geom_boxplot()
## Plot the boxplot for one population
ggplot(bwdata, aes(x="other", y=bwt))  + geom_boxplot()
## Create boxplots for birth weights separated by mother's race
bxplot <- ggplot(bwdata, aes(x=race, y=bwt))
bxplot + geom_boxplot()
bxplot <- ggplot(bwdata, aes(x=race, y=bwt))
bxplot <- ggplot(bwdata, aes(x=race, y=bwt, colour=race))
bxplot + geom_boxplot()
bxplot + geom_boxplot() + geom_point(shape=4)
bxplot <- ggplot(bwdata, aes(x=race, y=bwt))
bxplot + geom_boxplot() + geom_point(shape=4)
crash <- read.csv("state crashes.csv")
crash_plot <- ggplot(crash, aes(x=Fatal.crashes,
y=Licensed.drivers)) + geom_point(shape=23)
print(crash_plot)
bxplot + geom_boxplot() + geom_point(shape=4, aes(colour=race))
crash_plot <- ggplot(crash, aes(x=Fatal.crashes, y=Licensed.drivers,
colour=as.character(Hand.held.ban)))
crash_handheld <- crash_plot + geom_point(
shape=23) + scale_colour_manual("Hand.held.ban",
values=c("1"="green","2"="orange", "3"="brown"))
print(crash_handheld)
smooth_crash <- crash_handheld + geom_point(
) + geom_smooth(se=F)
print(smooth_crash)
smooth_crash_reg <- crash_handheld
+ geom_point() + geom_smooth(method=lm, se=F)
bxplot + geom_boxplot() + geom_point(shape=4, aes(colour=race))
bxplot + geom_boxplot() + geom_point(shape=6, aes(colour=race))
bxplot + geom_boxplot() + geom_point(shape=3, aes(colour=race))
bxplot + geom_boxplot() + geom_point(aes(colour=race))
bxplot + geom_boxplot(position = "dodge2") + geom_point(aes(colour=race))
bxplot + geom_boxplot() + geom_point(shape=4, aes(colour=race))
bxplot + geom_boxplot(position = "dodge") + geom_point(aes(colour=race))
bxplot + geom_boxplot(position = "dodge") + geom_point(aes(colour=race))
bxplot + geom_boxplot(position = position_jitter()) + geom_point(aes(colour=race))
bxplot + geom_boxplot() + geom_jitter(shape=4, aes(colour=race))
## Jitter makes it spread out ( no covering it up )
## they get a random horizatal position
boxplot + geom_boxplot() + geom_dotplot()
## Jitter makes it spread out ( no covering it up )
## they get a random horizatal position
boxplot + geom_boxplot() + geom_dotplot(binaxis = "y")
bxplot + geom_boxplot()
## Jitter makes it spread out ( no covering it up )
## they get a random horizatal position
bxplot + geom_boxplot() + geom_dotplot(binaxis = "y")
## Jitter makes it spread out ( no covering it up )
## they get a random horizatal position
bxplot + geom_boxplot() + geom_dotplot(binaxis = "y", stackdir="center", aes(colour=race, fill=race))
## Plot the boxplot for one population
ggplot(bwdata, aes(x="other", y=bwt))  + geom_boxplot()
## Look at the faithful data
faithful[1:5,]
## Create histogram of waiting times
hist1 <- ggplot(faithful, aes(x=waiting))
hist1 + geom_histogram()
## Change number of bins in a histogram
binsize <- diff(range(faithful$waiting))/8
hist1 + geom_histogram(binwidth=binsize, fill="white", colour="black")
hist1 + geom_histogram(binwidth=binsize, fill="white", colour="black")
hist1 + geom_histogram(binwidth=binsize, fill="white", colour="black")
hist1 + geom_histogram(binwidth=5, fill="white", colour="black")
## Modifing outlier aesthetics
bxplot + geom_boxplot(outlier.size=1.5, outlier.shape=21)
## Look at the birthwt data (in MASS package)
birthwt[1:5,]
## Change labels for smoking and nonsmoking mothers
bwdata <- birthwt
bwdata$smoke <- factor(bwdata$smoke, labels=c("Nonsmoking","Smoking"))
bwdata
## Create histograms for birth weights separated by mothers' smoking habits
hist2 <- ggplot(bwdata, aes(x=bwt))
hist2 + geom_histogram(binwidth=250, fill="white", colour="black") +
facet_grid(smoke~.)
hist2 + geom_histogram(binwidth=250, fill="white", colour="black") +
facet_grid(.~smoke)
hist2 + geom_histogram(binwidth=250, fill="white", colour="black") +
facet_grid(smoke~.)
hist2 + geom_histogram(binwidth=250, fill="white", colour="black") +
facet_grid(.~smoke)
## Overlapping histograms
ggplot(bwdata, aes(x=bwt, fill=smoke)) +
geom_histogram(binwidth=250, position="identity", alpha=0.4)
## Overlapping histograms
ggplot(bwdata, aes(x=bwt, fill=smoke)) +
geom_histogram(binwidth=250, alpha=0.4)
## Overlapping histograms
ggplot(bwdata, aes(x=bwt, fill=smoke)) +
geom_histogram(binwidth=250, position="identity", alpha=0.4)
## Determining the probability density function
dnorm(0)
smooth_crash1 <- crash_handheld + geom_point(
) + geom_smooth(aes(fill=as.character(Hand.held.ban)
),method=lm,alpha=0.2) + scale_fill_manual("Hand.held.ban",
values=c("1"="green","2"="orange", "3"="brown"))
print(smooth_crash1)
## Determining the probability density function
dnorm(0)
dbinom(5, size=10, prob=0.3)
dpois(3, lambda=2.5)
## Determining the cumulative probability
pnorm(1.96)
pnorm(4.5, mean=2, sd=1.6)
pt(2.0, df=6)
punif(0.7)
punif(5, min=3, max=8)
pf(17, df1=3, df2=25)
pchisq(7, df=3)
pbinom(5, size=10, prob=0.3)
ppois(3, lambda=2.5)
infor(pnorm)
info(pnorm)
help(pnorm)
pchisq(7, df=3)
pbinom(5, size=10, prob=0.3)
ppois(3, lambda=2.5)
## Determining the value corresponding to the cumulative probability
qnorm(0.025)
pnorm(0.975)
## Generating random numbers
rnorm(10)
rnorm(10, mean=2, sd=1.6)
rt(10, df=12)
runif(10)
runif(10, min=3, max=8)
rf(10, df1=3, df2=25)
rchisq(10, df=3)
rbinom(10, size=10, prob=0.3)
rpois(10, lambda=2.5)
## Generating random numbers
rnorm(10)
## Generating random numbers
rnorm(10)
#A. dnorm
#B. pnorm
#C. gnorm
#D. rnorm
help(gnorm)
#A. dnorm
#B. pnorm
#C. gnorm
#D. rnorm
help(qnorm)
## Determining the probability density function
dnorm(0)
## Plotting a normal distribution curve
Xdata1 <- data.frame(X=c(-4,4))
dist1 <- ggplot(Xdata1, aes(x=X))
dist1 + stat_function(fun=dnorm)
## Plotting a normal distribution curve
Xdata1 <- data.frame(X=c(-4,4))
dist1 <- ggplot(Xdata1, aes(x=X))
dist1 + stat_function(fun=dnorm)
## Plotting a normal distribution and t-distribution curve
dist1 + stat_function(fun=dnorm) +
stat_function(fun=dt, args=list(df=3), linetype="dashed")
## Plotting a chi-squared curve
Xdata2 <- data.frame(X=c(0,20))
dist2 <- ggplot(Xdata2, aes(x=X))
dist2 + stat_function(fun=dchisq, args=list(df=4))
dt
## Shading the area above 1.5 in the normal distribution
dist1  + stat_function(fun=dnorm) +
geom_area(stat="function", fun=dnorm, xlim=c(1.5,4))
## Shading the area above 1.5 in the normal distribution
dist1  + stat_function(fun=dnorm) +
geom_area(stat="square", fun=dnorm, xlim=c(1.5,4))
## Shading the area above 1.5 in the normal distribution
dist1  + stat_function(fun=dnorm) +
geom_area(stat="function", fun=dnorm, xlim=c(1.5,4))
## Shading the area above and below +/- 1.5 in the normal distribution
dist1  + stat_function(fun=dnorm) +
geom_area(stat="function", fun=dnorm, xlim=c(1.5,4)) +
geom_area(stat="function", fun=dnorm, xlim=c(-4,-1.5))
## Shading the area above and below +/- 1.5 in the normal distribution
dist1  + stat_function(fun=dnorm) +
geom_area(stat="function", fun=dnorm, xlim=c(1.5,4)) +
geom_area(stat="function", fun=dnorm, xlim=c(-4,1.5))
## Shading the area above and below +/- 1.5 in the normal distribution
dist1  + stat_function(fun=dnorm) +
geom_area(stat="function", fun=dnorm, xlim=c(1.5,4)) +
geom_area(stat="function", fun=dnorm, xlim=c(-4,-1.5))
## Plotting the cumulative probability function of the normal distribution
dist1  + stat_function(fun=pnorm)
knitr::opts_chunk$set(echo = TRUE, highlight=FALSE)
crash <- read.csv("state crashes.csv")
crash_plot <- ggplot(crash, aes(x=Licensed.drivers,
y=Fatal.crashes)) + geom_point(shape=23)
library(ggplot2)
library(car)
library(gcookbook)
library(MASS)
library(Hmisc)
crash <- read.csv("state crashes.csv")
crash_plot <- ggplot(crash, aes(x=Licensed.drivers,
y=Fatal.crashes)) + geom_point(shape=23)
print(crash_plot)
crash_plot <- ggplot(crash, aes(x=Licensed.drivers, y=Fatal.crashes,
colour=as.character(Hand.held.ban)))
crash_handheld <- crash_plot + geom_point(
shape=23) + scale_colour_manual("Hand.held.ban",
values=c("1"="green","2"="orange", "3"="brown"))
print(crash_handheld)
smooth_crash <- crash_handheld + geom_point(
) + geom_smooth(se=F)
print(smooth_crash)
smooth_crash_reg <- crash_handheld+ geom_point() + geom_smooth(method=lm, se=F)
print(smooth_crash_reg)
smooth_crash1 <- crash_handheld + geom_point(
) + geom_smooth(aes(fill=as.character(Hand.held.ban)
),method=lm,alpha=0.2) + scale_fill_manual("Hand.held.ban",
values=c("1"="green","2"="orange", "3"="brown"))
print(smooth_crash1)
all_lm <- smooth_crash1 + geom_smooth(method = 'lm',
aes(colour = NA), colour = 'blue', se=F)
print(all_lm)
