bar1 <- ggplot(pg_mean, aes(x=group, y=weight))
## Create bar graph to view the means of the treatment groups
bar1 <- ggplot(pg_mean, aes(x=group, y=weight))
bar1
bar1 + geom_bar(stat="identity")
## Look at pg_mean data set (in gcookbook package)
pg_mean
## Create bar graph to view the means of the treatment groups
bar1 <- ggplot(pg_mean, aes(x=group, y=weight))
bar1 + geom_bar(stat="identity")
## Look at pg_mean data set (in gcookbook package)
pg_mean
mpg
barmpg <- ggplot(mpg, aes(x=trans))
barmpg + geom_bar(stat="identity")
## Look at pg_mean data set (in gcookbook package)
pg_mean
barmpg + geom_bar()
help(geom_bar)
mpg
barmpg + geom_bar()
mpg
## Look at the PlantGrowth data set
PlantGrowth[1:5,]
## Create bar graph to view the means of the treatment groups
bar2 <- ggplot(PlantGrowth, aes(x=group, y=weight))
bar2 + stat_summary(fun.y=mean, geom="bar")
## Create bar graph to view the means of the treatment groups
bar2 <- ggplot(PlantGrowth, aes(x=group, y=weight))
stat_summary
bar2 + stat_summary(fun.y=median, geom="bar")
mpg
ggplot(mpg, aes(x=trans)) + stat_summary(fun.y=mean, geom="bar")
ggplot(mpg, aes(x=trans, y=hwy)) + stat_summary(fun.y=mean, geom="bar")
ggplot(mpg, aes(x=trans, y=hwy)) + stat_summary(fun.y=mean, geom="bar")
## Modifying aesthetics of the bar graph
bar1 + geom_bar(stat="identity", fill="orange", colour="blue")
bar2 + stat_summary(fun.y=mean, geom="bar", fill="orange", colour="blue")
## Modifying aesthetics of the bar graph
bar1 + geom_bar(stat="identity", fill="orange", colour="blue")
bar2 + stat_summary(fun.y=mean, geom="bar", fill="orange", colour="blue")
## Modifying the spacing of the bar graph
bar1 + geom_bar(stat="identity")
bar1 + geom_bar(stat="identity", width=0.5)
bar1 + geom_bar(stat="identity", width=1)
## Modifying the spacing of the bar graph
bar1 + geom_bar(stat="identity")
bar2 + stat_summary(fun.y=mean, geom="bar", fill="white", colour="black", width=0.5)
stat_summary(fun.data=mean_cl_normal, geom="errorbar", width=0.2)
bar2 + stat_summary(fun.y=mean, geom="bar", fill="white", colour="black", width=0.5) +
stat_summary(fun.data=mean_cl_normal, geom="errorbar", width=0.2)
## Adding error bars to the bar graph (CI)
## mean_cl_normal = CI
## Shud i add CI without checking the data. If we dont know pop std then we use t.
## Assumption for t confidence interval is that we have normal data
## we can ignore this if we have alot of data
## however we do not have big data
## adding these ci may not be statistically right.
bar2 + stat_summary(fun.y=mean, geom="bar", fill="white", colour="black", width=0.5) +
stat_summary(fun.data=mean_cl_normal, geom="errorbar", width=0.2)
## Adding error bars to the bar graph (one standard error)
bar2 + stat_summary(fun.y=mean, geom="bar", fill="white", colour="black", width=0.5) +
stat_summary(fun.data=mean_se, geom="errorbar", width=0.2)
## Adding error bars to the bar graph (one standard error)
bar2 + stat_summary(fun.y=mean, geom="bar", fill="white", colour="black", width=0.5) +
stat_summary(fun.data=mean_se, geom="errorbar", width=0.5)
## Adding error bars to the bar graph (one standard error)
bar2 + stat_summary(fun.y=mean, geom="bar", fill="white", colour="black", width=0.5) +
stat_summary(fun.data=mean_se, geom="errorbar", width=0.2)
## Adding error bars to the bar graph (one standard error)
bar2 + stat_summary(fun.y=mean, geom="bar", fill="white", colour="black", width=0.5) +
stat_summary(fun.data=mean_se, geom="errorbar", width=0.5)
mpg
ggplot(mpg, aes(x=trans, y=hwy)) + stat_summary(fun.y=mean, geom="bar", fill="white") + stat_summary(fun.data=mean_se, geom="errorbar", width=0.5)
ggplot(mpg, aes(x=trans,
y=hwy)) + stat_summary(fun.y=mean,
geom="bar", fill="white
") + stat_summary(fun.data=mean_se, geom="errorbar", width=0.5)
ggplot(mpg, aes(x=trans, y=hwy)) + stat_summary(fun.y=mean, geom="bar", fill="white") + stat_summary(fun.data=mean_se, geom="errorbar", width=0.5)
ggplot(mpg, aes(x=trans,
y=hwy)) + stat_summary(fun.y=mean,
geom="bar", fill="white") + stat_summary(fun.data=mean_se,
geom="errorbar", width=0.5)
ggplot(mpg, aes(x=trans,
y=hwy)) + stat_summary(fun.y=mean,
geom="bar", fill="white") + stat_summary(fun.data=mean_cl_normal(),
geom="errorbar", width=0.5)
ggplot(mpg, aes(x=trans,
y=hwy)) + stat_summary(fun.y=mean,
geom="bar", fill="white") + stat_summary(fun.data=mean_cl_normal,
geom="errorbar", width=0.5)
## Look at cabbages data set (in MASS package)
cabbages[1:5,]
## Create bar graph for average weight, separated by cultivation
bar3 <- ggplot(cabbages, aes(x=Date, y=HeadWt, fill=Cult))
## Create bar graph for average weight, separated by cultivation
bar3 <- ggplot(cabbages, aes(x=Date, y=HeadWt, fill=Cult))
bar3 + stat_summary(fun.y=mean, geom="bar")
## Create bar graph for average weight, separated by cultivation
bar3 <- ggplot(cabbages, aes(x=Date, y=HeadWt, fill=Cult))
bar3 + stat_summary(fun.y=mean, geom="bar")
bar3 + stat_summary(fun.y=mean, geom="bar")
## Create bar graph for average weight, separated by cultivation
bar3 <- ggplot(cabbages, aes(x=Date, y=HeadWt, fill=Cult))
bar3 + stat_summary(fun.y=mean, geom="bar")
bar3 + stat_summary(fun.y=mean, geom="bar")
## Create bar graph for average weight, separated by cultivation
## Put bars next to each other
## Position = 'dodge'
## without this it hides the data
bar3 + stat_summary(fun.y=mean, geom="bar", position="dodge")
## Adjusting width
bar3 + stat_summary(fun.y=mean, geom="bar", position="dodge", width=0.5)
## Adjusting width
bar3 + stat_summary(fun.y=mean, geom="bar", position=position_dodge(0.7), width=0.5)
## Adjusting width
bar3 + stat_summary(fun.y=mean, geom="bar", position="dodge", width=0.5)
bar3 + stat_summary(fun.y=mean, geom="bar", position=position_dodge(0.7), width=0.5)
## Adding space between bars within groups
## position = position_dodge(0-1)
bar3 + stat_summary(fun.y=mean, geom="bar", position=position_dodge(1),
width=0.5)
#  Additional example:                                                  #
#  Create a bar graph using the mpg data to display the average         #
#  highway mileage and its confidence interval for each type of         #
#  transmission separated by the drive.                                 #
mpg
ggplot(mpg, aes(x=trans, y=hwy, fill=drv)) + stat_summary(fun.y=mean, geom="bar", width=0.5) + stat_summary(fun.data=mean_cl_normal, geom="errorbar", width=0.5)
ggplot(mpg, aes(x=trans, y=hwy, fill=drv)) + stat_summary(fun.y=mean, geom="bar", position="dodge",width=0.5) + stat_summary(fun.data=mean_cl_normal, geom="errorbar", width=0.5)
ggplot(mpg, aes(x=trans, y=hwy, fill=drv)) + stat_summary(fun.y=mean, geom="bar", position=position_dodge(0.7),width=0.5) + stat_summary(fun.data=mean_cl_normal, geom="errorbar", width=0.5)
## Adding bar height values
## ..y.. = what i calculate represent that as my text
## number is in bar due to the vjust parameter
## finding position_dodge is guess and check
bar3 + stat_summary(fun.y=mean, geom="bar", position="dodge") +
stat_summary(fun.y=mean, geom="text", aes(label=..y..), vjust=1.5,
position=position_dodge(0.9), colour="white")
## Adding bar height values
## ..y.. = what i calculate represent that as my text
## number is in bar due to the vjust parameter
## finding position_dodge is guess and check
bar3 + stat_summary(fun.y=mean, geom="bar", position="dodge") +
stat_summary(fun.y=mean, geom="text", aes(label=..y..), vjust=1.5,
position=position_dodge(0.9), colour="white")
bar3 + stat_summary(fun.y=mean, geom="bar", position="dodge")
stat_summary(fun.y=mean, geom="text", aes(label=..y..), vjust=1.5,
position=position_dodge(0.9), colour="white")
bar3 + stat_summary(fun.y=mean, geom="bar", position="dodge") +
stat_summary(fun.y=mean, geom="text", aes(label=..y..), vjust=1.5,
position=position_dodge(0.9), colour="white")
ggplot(mpg, aes(x=trans, y=hwy, fill=drv)) + stat_summary(fun.y=mean, position="dodge", geom="bar", width=0.8) + stat_summary(fun.y=mean, geom="text", vjust=1.5, aes(..y..),position=position_dodge(0.7)) )
ggplot(mpg, aes(x=trans, y=hwy, fill=drv)) + stat_summary(fun.y=mean, position="dodge", geom="bar", width=0.8) + stat_summary(fun.y=mean, geom="text", vjust=1.5, aes(..y..),position=position_dodge(0.7))
ggplot(mpg, aes(x=trans, y=hwy, fill=drv)) + stat_summary(fun.y=mean, position="dodge", geom="bar", width=0.8) + stat_summary(fun.y=mean, geom="text", vjust=1.5, aes(label=..y..),position=position_dodge(0.7))
ggplot(mpg, aes(x=trans, y=hwy, fill=drv)) + stat_summary(fun.y=mean, position="dodge", geom="bar", width=0.8) + stat_summary(fun.y=mean, geom="text", vjust=0.5, aes(label=..y..),position=position_dodge(0.7))
ggplot(mpg, aes(x=trans, y=hwy, fill=drv)) + stat_summary(fun.y=mean, position="dodge", geom="bar", width=0.8) + stat_summary(fun.y=mean, geom="text", vjust=0.5, aes(label=..y..),position=position_dodge(0.2))
help(aes)
ggplot(mpg, aes(x=trans, y=hwy, fill=drv)) + stat_summary(fun.y=mean, position="dodge", geom="bar", width=0.8) + stat_summary(fun.y=mean, geom="text", vjust=0.5, aes(label=..y..),position=position_dodge(0.01))
ggplot(mpg, aes(x=trans, y=hwy, fill=drv)) + stat_summary(fun.y=mean, position="dodge", geom="bar", width=0.8) + stat_summary(fun.y=mean, geom="text", vjust=10, aes(label=..y..),position=position_dodge(0.01))
ggplot(mpg, aes(x=trans, y=hwy, fill=drv)) + stat_summary(fun.y=mean, position="dodge", geom="bar", width=0.8) + stat_summary(fun.y=mean, geom="text", vjust=0.5, aes(label=..y..),position=position_dodge(0.01))
ggplot(mpg, aes(x=trans, y=hwy, fill=drv)) + stat_summary(fun.y=mean, position="dodge", geom="bar", width=0.8) + stat_summary(fun.y=mean, geom="text", vjust=0.8, aes(label=..y..),position=position_dodge(0.01))
midwest[1:5,]
bar3 <- ggplot(midwest, aes(x=state, fill=as.factor(inmetro))) + geom_bar(position="dodge")
bar3 <- ggplot(midwest, aes(x=state, fill=as.factor(inmetro))) + geom_bar(position="dodge")
bar3
bar3 <- ggplot(midwest, aes(x=state, fill=category)) + geom_bar()
bar3
ggplot(mpg, aes(x=trans, y=hwy) + stat_summary(fun.y=mean, geom="bar", width=0.5) + stat_summary(fun.y=mean, geom="text", width=0.5, position=position_dodge(0.5))
ggplot(mpg, aes(x=trans, y=hwy)) + stat_summary(fun.y=mean, geom="bar", width=0.5) + stat_summary(fun.y=mean, geom="text", width=0.5, position=position_dodge(0.5))
ggplot(mpg, aes(x=trans, y=hwy)) + stat_summary(fun.y=mean, geom="bar", width=0.5) + stat_summary(fun.y=mean, geom="text", vjust=0.8, aes(label=..y..), width=0.5, position=position_dodge(0.5))
## Look at birthwt data (in MASS package)
birthwt[1:5,]
## Label race values in data
bwdata <- birthwt
## Label race values in data
bwdata <- birthwt
bwdata
bwdata$race <- factor(bwdata$race, labels=c("white","black","other"))
bwdata[1:4,]
birthwt[1:4,]
## Label race values in data
bwdata <- birthwt
bwdata
View(bwdata)
View(bwdata)
birthwt
bwdata[1:4,]
birthwt[1:4,]
bwdata$race <- factor(bwdata$race, labels=c("white","black","other"))
bwdata[1:4,]
birthwt[1:4,]
help(factor)
bwdata$race <- factor(bwdata$race, labels=c("white","black","other"))
birthwt[1:4,]
bwdata[1:4,]
bwdata$race <- factor(bwdata$race, labels=c("white","black","other"))
bwdata[1:4,]
birthwt[1:4,]
## Create boxplots for birth weights separated by mother's race
bxplot <- ggplot(bwdata, aes(x=race, y=bwt))
bxplot + geom_boxplot() + geom_point(shape=4, aes(colour=race))
bxplot + geom_boxplot() + geom_jitter(shape=4, aes(colour=race))
bxplot + geom_boxplot() + geom_jitter(shape=4, aes(colour=race))
bxplot + geom_boxplot() + geom_point(shape=4, aes(colour=race))
bxplot + geom_boxplot() + geom_jitter(shape=4, aes(colour=race))
bxplot + geom_boxplot() + geom_point(shape=4, aes(colour=race))
bxplot + geom_boxplot() + geom_jitter(shape=4, aes(colour=race))
bxplot + geom_boxplot()
bxplot + geom_boxplot() + geom_point(shape=4, aes(colour=race))
help("geom_boxplot")
bxplot + geom_boxplot() + geom_point(shape=4, aes(colour=race))
bxplot + geom_boxplot() + geom_jitter(shape=4, aes(colour=race))
## Jitter makes it spread out ( no covering it up )
## they get a random horizatal position
bxplot + geom_boxplot() + geom_dotplot(binaxis = "y", stackdir="center", aes(colour=race, fill=race))
bxplot + geom_boxplot() + geom_dotplot(binaxis = "y", aes(colour=race, fill=race))
bxplot + geom_boxplot() + geom_dotplot(binaxis = "y", stackdir="left", aes(colour=race, fill=race))
bxplot + geom_boxplot() + geom_dotplot(binaxis = "y", aes(colour=race, fill=race))
bxplot + geom_boxplot() + geom_dotplot(binaxis = "x", aes(colour=race, fill=race))
bxplot + geom_boxplot() + geom_dotplot(binaxis = "y", aes(colour=race, fill=race))
bxplot + geom_boxplot() + geom_dotplot(binaxis = "y", aes(colour=race, fill=race))
bxplot + geom_boxplot() + geom_dotplot(binaxis = "y)
bxplot + geom_boxplot() + geom_dotplot(binaxis = "y")
bxplot + geom_boxplot() + geom_dotplot(binaxis = "y")
ggplot(bwdata, aes(x=race, y=bwt, color=race)) + geom_boxplot() + geom_dotplot(binaxis = "y")
ggplot(bwdata, aes(x=race, y=bwt, color=race, fill=race)) + geom_boxplot() + geom_dotplot(binaxis = "y")
## Jitter makes it spread out ( no covering it up )
## they get a random horizatal position
bxplot + geom_boxplot() + geom_dotplot(binaxis = "y", stackdir="center", aes(colour=race, fill=race))
ggplot(bwdata, aes(x=race, y=bwt, color=race, fill=race)) + geom_boxplot() + geom_dotplot(binaxis = "y")
mpg
bxplot + geom_boxplot() + geom_point(aes(colour=race,shape=4))
help(aes)
ggplot(mpg, aes(x=drv, y=hwy)) + geom_boxplot()
ggplot(mpg, aes(x=drv, y=hwy)) + geom_boxplot() + geom_point(shape=4, color="red")
ggplot(mpg, aes(x=drv, y=hwy)) + geom_boxplot(outlier.shape = 4) + geom_point(shape=4, color="red")
ggplot(mpg, aes(x=drv, y=hwy)) + geom_boxplot() + geom_point(shape=4, color=drv)
"red
ggplot(mpg, aes(x=drv, y=hwy)) + geom_boxplot() + geom_point(shape=4, aes(color=drv))
ggplot(mpg, aes(x=drv, y=hwy)) + geom_boxplot() + geom_point(shape=4, aes(color=drv))
ggplot(mpg, aes(x=drv, y=hwy)) + geom_boxplot() + geom_point(shape=22, aes(color=drv))
ggplot(mpg, aes(x=drv, y=hwy)) + geom_boxplot() + geom_point(shape=22, aes(color=drv))
ggplot(mpg, aes(x=drv, y=hwy)) + geom_boxplot() + geom_point(shape=22, aes(color=drv))
ggplot(mpg, aes(x=drv, y=hwy)) + geom_boxplot() + geom_point(shape=23, aes(color=drv))
ggplot(mpg, aes(x=drv, y=hwy)) + geom_boxplot() + geom_point(shape=23, aes(color=drv))
ggplot(mpg, aes(x=drv, y=hwy)) + geom_boxplot(outlier.shape = 4) + geom_point(shape=4, color="red")
ggplot(mpg, aes(x=drv, y=hwy)) + geom_boxplot() + geom_point(shape=23, aes(color="blue"))
ggplot(mpg, aes(x=drv, y=hwy)) + geom_boxplot() + geom_point(shape=22, aes(color=drv))
ggplot(mpg, aes(x=drv, y=hwy)) + geom_boxplot(outlier.shape = 4) + geom_point(shape=21, aes(color=drv))
ggplot(mpg, aes(x=drv, y=hwy)) + geom_boxplot(outlier.shape = 4) + geom_point(shape=21, aes(color=drv, fill=drv))
ggplot(mpg, aes(x=drv, y=hwy)) + geom_boxplot(outlier.shape = 4) + geom_jitter(shape=21, aes(color=drv, fill=drv))
ggplot(mpg, aes(x=drv, y=hwy)) + geom_boxplot(outlier.shape = 4) + geom_dotplot(shape=21, stackdir="center", aes(color=drv, fill=drv), binaxis="y")
ggplot(mpg, aes(x=drv, y=hwy)) + geom_boxplot()
## Plot the boxplot for one population
ggplot(bwdata, aes(x="other", y=bwt))  + geom_boxplot()
## Modify the space between the boxplots
bxplot + geom_boxplot()
bxplot + geom_boxplot(width=0.5)
## Modifing outlier aesthetics
bxplot + geom_boxplot(outlier.size=5, outlier.shape=21)
## Adding notches to boxplots
bxplot + geom_boxplot(notch=TRUE)
## Adding notches to boxplots
bxplot + geom_boxplot(notch=TRUE)
## Adding notches to boxplots
bxplot + geom_boxplot(notch=TRUE)
## Modifing outlier aesthetics
bxplot + geom_boxplot(outlier.size=5, outlier.shape=21)
## Adding notches to boxplots
bxplot + geom_boxplot(notch=TRUE)
## Adding markers for the means
bxplot + geom_boxplot() + stat_summary(fun.y="mean", geom="point")
bxplot + geom_boxplot() +
stat_summary(fun.y="mean", geom="point", shape=21, size=3)
bxplot + geom_boxplot() +
stat_summary(fun.y="mean", geom="point", shape=21, size=3)
## Adding markers for the means
bxplot + geom_boxplot() + stat_summary(fun.y="mean", geom="point")
bxplot + geom_boxplot() +
stat_summary(fun.y="mean", geom="point", shape=21, size=3)
## Adding markers for the means
bxplot + geom_boxplot() + stat_summary(fun.y="mean", geom="point")
bxplot + geom_boxplot() +
stat_summary(fun.y="mean", geom="point", shape=21, size=3)
ggplot(mpg, aes(x=drv, y=hwy)), geom_boxplot(), stat_summary(fun.y=mean, geom="point", size=3)
ggplot(mpg, aes(x=drv, y=hwy))+ geom_boxplot()+ stat_summary(fun.y=mean, geom="point", size=3)
ggplot(mpg, aes(x=drv, y=hwy))+ geom_boxplot()+ stat_summary(fun.y=mean, geom="point", size=3, shape=4)
## Look at the faithful data
faithful[1:5,]
## Create histogram of waiting times
hist1 <- ggplot(faithful, aes(x=waiting))
hist1 + geom_histogram()
## Look at the faithful data
faithful[1:5,]
## Create histogram of waiting times
hist1 <- ggplot(faithful, aes(x=waiting))
hist1 + geom_histogram()
hist1 + geom_histogram()
## Change number of bins in a histogram
binsize <- diff(range(faithful$waiting))/8
hist1 + geom_histogram(binwidth=binsize, fill="white", colour="black")
hist1 + geom_histogram(binwidth=5, fill="white", colour="black")
hist1 + geom_histogram(binwidth=5, fill="white", colour="black")
hist1 + geom_histogram(binwidth=10, fill="white", colour="black")
hist1 + geom_histogram(binwidth=5, fill="white", colour="black")
hist1 + geom_histogram(binwidth=10, fill="white", colour="black")
5
hist1 + geom_histogram(binwidth=5, fill="white", colour="black")
ggplot(mpg, aes(x=hwy)) + geom_histogram(binwidth=4)
ggplot(mpg, aes(x=drv, y=hwy))+ geom_boxplot()+ stat_summary(fun.y=mean, geom="point", size=3, shape=4)
ggplot(mpg, aes(x=hwy)) + geom_histogram(binwidth=binsize)
binsize = diff(range(mpg$hwy))/4
ggplot(mpg, aes(x=hwy)) + geom_histogram(binwidth=binsize)
ggplot(mpg, aes(x=hwy)) + geom_histogram(binwidth=binsize, width=0.5)
ggplot(mpg, aes(x=hwy)) + geom_histogram(binwidth=binsize)
ggplot(mpg, aes(x=hwy)) + geom_histogram(binwidth=4)
ggplot(mpg, aes(x=hwy)) + geom_histogram(binwidth=4)
ggplot(mpg, aes(x=hwy)) + geom_histogram(binwidth=4,fill="white", colour="black")
ggplot(mpg, aes(x=hwy)) + geom_histogram(binwidth=binsize,fill="white", colour="black")
ggplot(mpg, aes(x=hwy)) + geom_histogram(binwidth=binsize,fill="white", colour="black")
ggplot(mpg, aes(x=hwy)) + geom_histogram(binwidth=binsize,fill="white", colour="black")
ggplot(mpg, aes(x=hwy)) + geom_histogram(binwidth=4,fill="white", colour="black")
## Look at the birthwt data (in MASS package)
birthwt[1:5,]
## Change labels for smoking and nonsmoking mothers
bwdata <- birthwt
bwdata$smoke <- factor(bwdata$smoke, labels=c("Nonsmoking","Smoking"))
## Create histograms for birth weights separated by mothers' smoking habits
hist2 <- ggplot(bwdata, aes(x=bwt))
hist2 + geom_histogram(binwidth=250, fill="white", colour="black") +
facet_grid(smoke~.)
hist2 + geom_histogram(binwidth=250, fill="white", colour="black") +
facet_grid(.~smoke)
hist2 + geom_histogram(binwidth=250, fill="white", colour="black") +
facet_grid(smoke~.)
hist2 + geom_histogram(binwidth=250, fill="white", colour="black") +
facet_grid(.~smoke) #top label is smoking
ggplot(mpg, aes(x=hwy)) + geom_histogram(binwidth = 4)
ggplot(mpg, aes(x=hwy)) + geom_histogram(binwidth = 4, fill="white", color="black")
ggplot(mpg, aes(x=hwy)) + geom_histogram(binwidth = 4, fill="white", color="black") + facet_grid(.drv)
ggplot(mpg, aes(x=hwy)) + geom_histogram(binwidth = 4, fill="white", color="black") + facet_grid(.~drv)
ggplot(mpg, aes(x=hwy)) + geom_histogram(binwidth = 4, fill="white", color="black") + facet_waro(.~drv, nrow=2)
ggplot(mpg, aes(x=hwy)) + geom_histogram(binwidth = 4, fill="white", color="black") + facet_warp(.~drv, nrow=2)
help("facet_wrap")
ggplot(mpg, aes(x=hwy)) + geom_histogram(binwidth = 4, fill="white", color="black") + facet_wrap(.~drv, nrow=2)
## Overlapping histograms
ggplot(bwdata, aes(x=bwt, fill=smoke)) +
geom_histogram(binwidth=250, position="identity", alpha=0.4)
## Determining the probability density function
dnorm(0)
dbinom(5, size=10, prob=0.3)
dpois(3, lambda=2.5)
## Plotting a normal distribution curve
Xdata1 <- data.frame(X=c(-4,4))
dist1 <- ggplot(Xdata1, aes(x=X))
dist1 + stat_function(fun=dnorm)
## Plotting a normal distribution curve
Xdata1 <- data.frame(X=c(-4,4))
## Plotting a normal distribution curve
Xdata1 <- data.frame(X=c(-4,4))
dist1 <- ggplot(Xdata1, aes(x=X))
dist1 + stat_function(fun=dnorm)
## Plotting a normal distribution and t-distribution curve
dist1 + stat_function(fun=dnorm) +
stat_function(fun=dt, args=list(df=3), linetype="dashed")
ggplot(mpg, aes(x=hwy)) + geom_histogram(binwidth=4, fill="white",color="black")
ggplot(mpg, aes(x=hwy)) + geom_histogram(binwidth=4, fill="white",color="black") + stat_function(fun=dnorm)
ggplot(mpg, aes(x=hwy)) + geom_histogram(binwidth=4, fill="white",color="black") + stat_function(fun=dnorm)
stat_function(fun=dnorm)
ggplot(mpg, aes(x=hwy)) + stat_function(fun=dnorm)
ggplot(mpg, aes(x=hwy)) + geom_histogram(binwidth=4, fill="white",color="black") + stat_function()
ggplot(mpg, aes(x=hwy)) + geom_histogram(binwidth=4, fill="white",color="black") + stat_function(fun=dnorm)
## Shading the area above 1.5 in the normal distribution
dist1  + stat_function(fun=dnorm) +
geom_area(stat="function", fun=dnorm, xlim=c(1.5,4))
## Create a QQ plot for the waiting times
ggplot(faithful, aes(sample = waiting)) + stat_qq()
knitr::opts_chunk$set(echo = TRUE, highlight=FALSE)
library(ggplot2)
setwd("/Users/maxryoo/Documents/Fall 2018/STAT3080/HW4/")
fatalities <- read.csv("fatalities.csv")
lsmooth <- ggplot(fatalities, aes(x=Year, y=Fatalities, color=State)) + geom_line()
print(lsmooth)
fatalitiesp <- fatalities
fatalitiesp$proportion <-
fatalities$Fatalities / fatalities$Resident.Population
lsmoothp <- ggplot(fatalitiesp, aes(x=Year, y=proportion, color=State)) + geom_line()
print(lsmoothp)
fatalitieslp <- fatalities
fatalitieslp$proportion <-
fatalities$Fatalities / fatalities$Licensed.Drivers
lsmoothlp <- ggplot(fatalitieslp, aes(x=Year, y=proportion, color=State)) + geom_line()
print(lsmoothlp)
pointslsmoothp1 <- lsmoothp + geom_point()
print(pointslsmoothp1)
pointslsmoothp2 <- lsmoothp + geom_point(aes(shape = State))
print(pointslsmoothp2)
fatalacc <- read.csv("fatal accidents.csv")
bystate <- table(fatalacc$State)
fatalstate <- as.data.frame(bystate)
barbystate <- ggplot(fatalstate, aes(x=Var1, y=Freq)) + geom_bar(stat="identity", fill="white", colour="black")
print(barbystate + labs(title="Fatal accidents by state",
x="States", y="Fatal Accidents"))
bxperson <- ggplot(fatalacc, aes(x=State, y=Person.count))
mean_out_bx <- bxperson + geom_boxplot(width=0.5, outlier.size=2, outlier.shape=16, outlier.colour = "red") + stat_summary(fun.y="mean", geom="point", shape=16, size=2, color="blue")
print(mean_out_bx)
barmedian <- ggplot(fatalacc, aes(x=State, y=Person.count)) + stat_summary(fun.y=median, geom="bar", position="dodge",fill="white", colour="black")
barmedianer <- barmedian+ stat_summary(fun.data=mean_cl_normal, geom="errorbar", width=0.2)
print(barmedianer)
barmedian <- ggplot(fatalacc,
aes(x=State, y=Person.count)) +
stat_summary(fun.y=median, geom="bar", position="dodge",fill="white", colour="black")
barmedianer <- barmedian+ stat_summary(fun.data=mean_cl_normal,
geom="errorbar", width=0.2)
print(barmedianer)
fatalaccva <- fatalacc[which(fatalacc$State == "Virginia"),]
x=seq(0,15,5)
density <- dnorm(x,
mean(fatalaccva$Person.count),sd(fatalaccva$Person.count))
histvirginia <- ggplot(fatalaccva,
aes(x=Person.count)) + geom_histogram(binwidth = 1, fill="white", colour="black", aes(y=..density..)) + stat_function(fun=dchisq, args=list(df=2)) + stat_function(fun=dnorm)
print(histvirginia)
fatalaccva <- fatalacc[which(fatalacc$State == "Virginia"),]
x=seq(0,15,5)
density <- dnorm(x,
mean(fatalaccva$Person.count),sd(fatalaccva$Person.count))
histvirginia <- ggplot(fatalaccva,
aes(x=Person.count)) + geom_histogram(binwidth = 1, fill="white", colour="black", aes(y=..density..)) + stat_function(fun=dchisq, args=list(df=2)) + stat_function(fun=dnorm) +
stat_function(fun=dnorm, colour="blue", args=list(mean=mean(fatalaccva$Person.count), sd=sd(fatalaccva$Person.count)))
print(histvirginia)
fatalaccva <- fatalacc[which(fatalacc$State == "Virginia"),]
x=seq(0,15,5)
density <- dnorm(x,
mean(fatalaccva$Person.count),sd(fatalaccva$Person.count))
histvirginia <- ggplot(fatalaccva,
aes(x=Person.count)) + geom_histogram(binwidth = 1, fill="white", colour="black", aes(y=..density..)) + stat_function(fun=dchisq, args=list(df=2)) +
stat_function(fun=dnorm, colour="blue", args=list(mean=mean(fatalaccva$Person.count), sd=sd(fatalaccva$Person.count)))
print(histvirginia)
fatalacc <- read.csv("fatal accidents.csv")
bystate <- table(fatalacc$State)
fatalstate <- as.data.frame(bystate)
barbystate <- ggplot(fatalstate, aes(x=Var1, y=Freq)) +
geom_bar(stat="identity", fill="white", colour="black")
print(barbystate + labs(title="Fatal accidents by state",
x="States", y="Fatal Accidents"))
bxperson <- ggplot(fatalacc, aes(x=State, y=Person.count))
mean_out_bx <- bxperson + geom_boxplot(width=0.5, outlier.size=2, outlier.shape=16,
outlier.colour = "red") + stat_summary(fun.y="mean",
geom="point", shape=16, size=2, color="blue")
print(mean_out_bx)
bxperson <- ggplot(fatalacc, aes(x=State, y=Person.count))
mean_out_bx <- bxperson +
geom_boxplot(width=0.5, outlier.size=2, outlier.shape=16,
outlier.colour = "red") +
stat_summary(fun.y="mean", geom="point",
shape=16, size=2, color="blue")
print(mean_out_bx)
barmedian <- ggplot(fatalacc,
aes(x=State, y=Person.count)) +
stat_summary(fun.y=median, geom="bar",
position="dodge",fill="white", colour="black")
barmedianer <- barmedian+
stat_summary(fun.data=mean_cl_normal,
geom="errorbar", width=0.2)
print(barmedianer)
fatalaccva <- fatalacc[which(
fatalacc$State == "Virginia"),]
x=seq(0,15,5)
density <- dnorm(x,
mean(fatalaccva$Person.count)
,sd(fatalaccva$Person.count))
histvirginia <- ggplot(fatalaccva,
aes(x=Person.count))
+ geom_histogram(binwidth = 1, fill="white",
colour="black", aes(y=..density..))
fatalaccva <- fatalacc[which(
fatalacc$State == "Virginia"),]
x=seq(0,15,5)
density <- dnorm(x,
mean(fatalaccva$Person.count)
,sd(fatalaccva$Person.count))
histvirginia <- ggplot(fatalaccva,
aes(x=Person.count)) + geom_histogram(binwidth = 1, fill="white", colour="black", aes(y=..density..)) + stat_function(fun=dchisq, args=list(df=2)) +
stat_function(fun=dnorm, colour="blue", args=list(mean=mean(fatalaccva$Person.count), sd=sd(fatalaccva$Person.count)))
print(histvirginia)
fatalaccva <- fatalacc[which(
fatalacc$State == "Virginia"),]
x=seq(0,15,5)
density <- dnorm(x,
mean(fatalaccva$Person.count)
,sd(fatalaccva$Person.count))
histvirginia <- ggplot(fatalaccva,
aes(x=Person.count)) +
geom_histogram(binwidth = 1, fill="white",
colour="black", aes(y=..density..)) +
stat_function(fun=dchisq, args=list(df=2)) +
stat_function(fun=dnorm, colour="blue", args=list(mean=mean(fatalaccva$Person.count), sd=sd(fatalaccva$Person.count)))
print(histvirginia)
fatalaccva <- fatalacc[which(
fatalacc$State == "Virginia"),]
x=seq(0,15,5)
density <- dnorm(x,
mean(fatalaccva$Person.count)
,sd(fatalaccva$Person.count))
histvirginia <- ggplot(fatalaccva,
aes(x=Person.count)) +
geom_histogram(binwidth = 1, fill="white",
colour="black", aes(y=..density..)) +
stat_function(fun=dchisq, args=list(df=2)) +
stat_function(fun=dnorm, colour="blue",
args=list(mean=mean(fatalaccva$Person.count),
sd=sd(fatalaccva$Person.count)))
print(histvirginia)
