knitr::opts_chunk$set(echo = TRUE, highlight=FALSE)
set.seed(12181998)
set.seed(12181998)
set.seed(12181998)
k <- 10000
population_mean <- 62.9
population_mean <- 62.9
population_sd <- 13.3
gre <- samp > 62.9
samp <- replicarte(k, rnomr(i, population_mean, populatoin_sd))
gre <- samp > 62.9
samp <- replicate(k, rnomr(i, population_mean, populatoin_sd))
gre <- samp > 62.9
samp <- replicate(k, rnomr(i, population_mean, populatoin_sd))
samp <- replicate(k, rnorm(i, population_mean, populatoin_sd))
for(i in c(7,28,49)) {
samp <- replicate(k, rnorm(i, population_mean, populatoin_sd))
gre <- samp > 62.9
}
population_mean <- 62.9
population_sd <- 13.3
for(i in c(7,28,49)) {
samp <- replicate(k, rnorm(i, population_mean, populatoin_sd))
gre <- samp > 62.9
}
samp <- replicate(k, rnorm(i, population_mean, population_sd))
gre <- samp > 62.9
vec <- apply(gre, 2, sum)
result <- lapply(vec, function(x) binom.test(x, i, alternative="two.sided"))
pval <- sapply(1:k, function(x) result[[x]]$p.value)
len1 <- length(which(res == "Reject"))/k
pval <- sapply(1:k, function(x) result[[x]]$p.value)
len1 <- length(which(res == "Reject"))/k
len <- length(which(res == "Reject"))/k
result1 <- ifelse(pval <= 0.05, "Reject", "Fail to reject")
len <- length(which(result1 == "Reject"))/k
assign(paste("result", i, sep="."), len)
set.seed(12181998)
k <- 10000
population_mean <- 62.9
population_sd <- 13.3
for(i in c(7,28,49)) {
samp <- replicate(k, rnorm(i, population_mean, population_sd))
gre <- samp > 62.9
vec <- apply(gre, 2, sum)
result <- lapply(vec, function(x) binom.test(x, i, alternative="two.sided"))
pval <- sapply(1:k, function(x) result[[x]]$p.value)
result1 <- ifelse(pval <= 0.05, "Reject", "Fail to reject")
len <- length(which(result1 == "Reject"))/k
assign(paste("result", i, sep="."), len)
}
print(result.7)
print(result.28)
print(result.49)
print(result.7)
print(result.28)
print(result.49)
samp <- replicate(k, rnorm(i, population_mean, population_sd))
k <- 10000
population_mean <- 62.9
population_sd <- 13.3
for(i in c(7,28,49)) {
samp <- replicate(k, rnorm(i, population_mean, population_sd))
gre <- samp > 62.9
vec <- apply(gre, 2, sum)
result <- lapply(vec, function(x) binom.test(x, i, alternative="two.sided"))
pval <- sapply(1:k, function(x) result[[x]]$p.value)
result1 <- ifelse(pval <= 0.05, "R", "F")
len <- length(which(result1 == "R"))/k
assign(paste("result", i, sep="."), len)
}
print(result.7)
print(result.28)
print(result.49)
assign(paste("result", i, sep="."), len)
for(i in c(7,28,49)) {
samp <- replicate(k, rnorm(i, population_mean, population_sd))
gre <- samp > 62.9
vec <- apply(gre, 2, sum)
result <- lapply(vec, function(x) binom.test(x, i, alternative="two.sided"))
pval <- sapply(1:k, function(x) result[[x]]$p.value)
result1 <- ifelse(pval <= 0.05, "R", "F")
len <- length(which(result1 == "R"))/k
print(len)
}
print(result.7)
print(result.28)
print(result.49)
for(i in c(7,28,49)) {
samp <- replicate(k, rnorm(i, population_mean, population_sd))
gre <- lapply(1:k, function(x) wilcox.test(samp[,x], mu=62.9, alternative = "two.sided"))
pval <- lapply(1:k, function(x) result[[x]]$p.value)
result <- ifelse(pval <= 0.05, "R", "F")
len <- length(which(res == "R"))/k
print(len)
}
for(i in c(7,28,49)) {
samp <- replicate(k, rnorm(i, population_mean, population_sd))
gre <- lapply(1:k, function(x) wilcox.test(samp[,x], mu=62.9, alternative = "two.sided"))
pval <- lapply(1:k, function(x) result[[x]]$p.value)
result <- ifelse(pval <= 0.05, "R", "F")
len <- length(which(result == "R"))/k
print(len)
}
for(i in c(7,28,49)) {
samp <- replicate(k, rnorm(i, population_mean, population_sd))
r <- lapply(1:k, function(x) wilcox.test(samp[,x], mu=62.9, alternative = "two.sided"))
pval <- lapply(1:k, function(x) r[[x]]$p.value)
result <- ifelse(pval <= 0.05, "R", "F")
len <- length(which(result == "R"))/k
print(len)
}
top <- c("two-tailed sign test", "sign rank test")
print(A.7)
set.seed(12181998)
k <- 10000
population_mean <- 62.9
population_sd <- 13.3
for(i in c(7,28,49)) {
samp <- replicate(k, rnorm(i, population_mean, population_sd))
gre <- samp > 62.9
vec <- apply(gre, 2, sum)
result <- lapply(vec, function(x) binom.test(x, i, alternative="two.sided"))
pval <- sapply(1:k, function(x) result[[x]]$p.value)
result1 <- ifelse(pval <= 0.05, "R", "F")
len <- length(which(result1 == "R"))/k
assign(paste("A", i, sep="."), len)
}
print(A.7)
print(A.28)
print(A.49)
for(i in c(7,28,49)) {
samp <- replicate(k, rnorm(i, population_mean, population_sd))
r <- lapply(1:k, function(x) wilcox.test(samp[,x], mu=62.9, alternative = "two.sided"))
pval <- lapply(1:k, function(x) r[[x]]$p.value)
result <- ifelse(pval <= 0.05, "R", "F")
len <- length(which(result == "R"))/k
assign(paste("B", i, sep="."), len)
}
print(B.7)
print(B.28)
print(B.49)
top <- c("two-tailed sign test", "sign rank test")
top <- c("two-tailed sign test", "sign rank test")
table2 <- rbind("Two-tailed sign test" = c(A.7, A.28, A.49),
"Sign rank test" = c(B.7, B.28, B.49))
table2
colnames(table2) <- c("Sample Size 7", "Sample Size 28", "Sample Size 49")
print(table2)
samp <- replicated(k, i, population_mean, population_sd))
samp <- replicated(k, i, population_mean, population_sd)
samp <- replicate(k, i, population_mean, population_sd)
samp <- replicate(k, i, population_mean, population_sd)
samp <- replicate(k, i, population_mean, population_sd)
samp <- replicate(k, rnorm(i, population_mean, population_sd))
for(i in c(7,28,49)) {
samp <- replicate(k, rnorm(i, population_mean, population_sd))
gre <- samp > 59
vec <- apply(gre, 2, sum)
result <- lapply(vec, function(x) binom.test(x, i, alternative="two.sided"))
pval <- sapply(1:k, function(x) result[[x]]$p.value)
result1 <- ifelse(pval <= 0.05, "R", "F")
len <- length(which(result1 == "R"))/k
assign(paste("3A", i, sep="."), len)
}
print(3A.7)
for(i in c(7,28,49)) {
samp <- replicate(k, rnorm(i, population_mean, population_sd))
gre <- samp > 59
vec <- apply(gre, 2, sum)
result <- lapply(vec, function(x) binom.test(x, i, alternative="two.sided"))
pval <- sapply(1:k, function(x) result[[x]]$p.value)
result1 <- ifelse(pval <= 0.05, "R", "F")
len <- length(which(result1 == "R"))/k
assign(paste("TA", i, sep="."), len)
}
print(TA.7)
print(TA.28)
print(TA.49)
for(i in c(7,28,49)) {
samp <- replicate(k, rnorm(i, population_mean, population_sd))
gre <- samp > 59
vec <- apply(gre, 2, sum)
result <- lapply(vec, function(x) binom.test(x, i, alternative="two.sided"))
pval <- sapply(1:k, function(x) result[[x]]$p.value)
pval <- unlist(pval)
result1 <- ifelse(pval <= 0.05, "R", "F")
len <- length(which(result1 == "R"))/k
assign(paste("TA", i, sep="."), len)
}
print(TA.7)
print(TA.28)
print(TA.49)
for(i in c(7,28,49)) {
samp <- replicate(k, rnorm(i, population_mean, population_sd))
gre <- samp > 59
vec <- apply(gre, 2, sum)
result <- lapply(vec, function(x) binom.test(x, i, alternative="two.sided"))
pval <- sapply(1:k, function(x) result[[x]]$p.value)
result1 <- ifelse(pval <= 0.05, "R", "F")
len <- length(which(result1 == "R"))/k
assign(paste("TA", i, sep="."), len)
}
print(TA.7)
print(TA.28)
print(TA.49)
for(i in c(7,28,49)) {
samp <- replicate(k, rnorm(i, population_mean, population_sd))
gre <- samp > 59
vec <- apply(gre, 2, sum)
result <- lapply(vec, function(x) binom.test(x, i, alternative="two.sided"))
pval <- sapply(1:k, function(x) result[[x]]$p.value)
result1 <- ifelse(pval <= 0.05, "R", "F")
len <- length(which(result1 == "R"))/k
assign(paste("TA", i, sep="."), len)
}
print(TA.7)
print(TA.28)
print(TA.49)
knitr::opts_chunk$set(echo = TRUE, highlight=FALSE)
set.seed(12181998)
type1 <- NULL
j <- 1
for(i in c(7,28,49)) {
rep_sample <- replicate(10000, rnorm(i, mean=62.9,sd =13.3))
rep_mean <- sapply(1:10000, function(x) mean(rep_sample[,x]))
rep_z <- sapply(1:10000, function(x) abs(rep_mean[x]-62.9)/(13.3/sqrt(i)))
rejects <- as.vector(which(rep_z >= 1.96))
proportion <- length(rejects)/10000
type1[j] <- proportion
j <- j+1
}
print(type1)
type1.2 <- NULL
j <- 1
critical <- c(2.447, 2.052, 2.011)
c <- 1
for(i in c(7,28,49)) {
rep_sample <- replicate(10000, rnorm(i, mean=62.9,sd =13.3))
rep_mean <- sapply(1:10000, function(x) mean(rep_sample[,x]))
rep_sd <- sapply(1:10000, function(x) sd(rep_sample[,x]))
rep_t <- sapply(1:10000, function(x) abs(rep_mean[x]-62.9)/(rep_sd[x]/sqrt(i)))
rejects <- as.vector(which(rep_t >= critical[c]))
proportion <- length(rejects)/10000
type1.2[j] <- proportion
j <- j+1
c <- c+1
}
print(type1.2)
type1.3 <- NULL
j <- 1
for(i in c(7,28,49)) {
rep_sample <- replicate(10000, rnorm(i, mean=62.9,sd =13.3))
rep_mean <- sapply(1:10000, function(x) mean(rep_sample[,x]))
rep_sd <- sapply(1:10000, function(x) sd(rep_sample[,x]))
rep_t <- sapply(1:10000, function(x) abs(rep_mean[x]-62.9)/(rep_sd[x]/sqrt(i)))
rejects <- as.vector(which(rep_t >= 1.96))
proportion <- length(rejects)/10000
type1.3[j] <- proportion
j <- j+1
}
print(type1.3)
tableoutput <- rbind(Problem1 = type1, Problem2 = type1.2,Problem3 = type1.3)
colnames(tableoutput) <- c("n=8", "n=28", "n=49")
print(tableoutput)
top <- c("two-tailed sign test", "sign rank test")
table2 <- rbind("Two-tailed sign test" = c(A.7, A.28, A.49),
"Sign rank test" = c(B.7, B.28, B.49),
"Problem 2 HW7" = c(0.0544,0.0487,0.0520))
colnames(table2) <- c("Sample Size 7", "Sample Size 28", "Sample Size 49")
print(table2)
for(i in c(7,28,49)) {
samp <- replicate(k, rnorm(i, population_mean, population_sd))
r <- lapply(1:k, function(x) wilcox.test(samp[,x], mu=59, alternative = "two.sided"))
pval <- lapply(1:k, function(x) r[[x]]$p.value)
result <- ifelse(pval <= 0.05, "R", "F")
len <- length(which(result == "R"))/k
assign(paste("TB", i, sep="."), len)
}
print(TB.7)
print(TB.28)
print(TB.49)
for(i in c(7,28,49)) {
samp <- replicate(k, rnorm(i, population_mean, population_sd))
r <- lapply(1:k, function(x) t.test(samp[,x], mu=59, alternative = "two.sided"))
pval <- lapply(1:k, function(x) r[[x]]$p.value)
result <- ifelse(pval <= 0.05, "R", "F")
len <- length(which(result == "R"))/k
assign(paste("TC", i, sep="."), len)
}
print(TC.7)
print(TC.28)
print(TC.49)
top <- c("two-tailed sign test", "sign rank test")
table4 <- rbind("Two-tailed sign test" = c(TA.7, TA.28, TA.49),
"Sign rank test" = c(TB.7, TB.28, TB.49),
"T-test" = c(TC.7, TC.28, TC.49))
colnames(table4) <- c("Sample Size 7", "Sample Size 28", "Sample Size 49")
print(table4)
for(i in c(7,28,49)) {
samp <- replicate(k, rchisq(i, df=2))
gre <- samp > 1.386294
vec <- apply(gre, 2, sum)
result <- lapply(vec, function(x) binom.test(x, i, alternative="two.sided"))
pval <- sapply(1:k, function(x) result[[x]]$p.value)
result1 <- ifelse(pval <= 0.05, "R", "F")
len <- length(which(result1 == "R"))/k
assign(paste("FA", i, sep="."), len)
}
print(FA.7)
print(FA.28)
print(FA.49)
for(i in c(7,28,49)) {
samp <- replicate(k, rchisq(i, df=2))
r <- lapply(1:k, function(x) wilcox.test(samp[,x], mu=1.386294, alternative = "two.sided"))
pval <- lapply(1:k, function(x) r[[x]]$p.value)
result <- ifelse(pval <= 0.05, "R", "F")
len <- length(which(result == "R"))/k
assign(paste("FB", i, sep="."), len)
}
print(FB.7)
print(FB.28)
print(FB.49)
for(i in c(7,28,49)) {
samp <- replicate(k, rchisq(i, df=2))
r <- lapply(1:k, function(x) wilcox.test(samp[,x], mu=1.386294, alternative = "two.sided"))
pval <- lapply(1:k, function(x) r[[x]]$p.value)
result <- ifelse(pval <= 0.05, "R", "F")
len <- length(which(result == "R"))/k
assign(paste("FB", i, sep="."), len)
}
print(FB.7)
print(FB.28)
print(FB.49)
table6 <- rbind("Two-tailed sign test" = c(FA.7, FA.28, FA.49),
"Sign rank test" = c(FB.7, FB.28, FB.49))
colnames(table6) <- c("Sample Size 7", "Sample Size 28", "Sample Size 49")
print(table6)
for(i in c(7,28,49)) {
samp <- replicate(k, rchisq(i, df=2))
gre <- samp > 0.5
vec <- apply(gre, 2, sum)
result <- lapply(vec, function(x) binom.test(x, i, alternative="two.sided"))
pval <- sapply(1:k, function(x) result[[x]]$p.value)
result1 <- ifelse(pval <= 0.05, "R", "F")
len <- length(which(result1 == "R"))/k
assign(paste("SA", i, sep="."), len)
}
print(SA.7)
print(SA.28)
print(SA.49)
for(i in c(7,28,49)) {
samp <- replicate(k, rchisq(i, df=2))
r <- lapply(1:k, function(x) wilcox.test(samp[,x], mu=0.5, alternative = "two.sided"))
pval <- lapply(1:k, function(x) r[[x]]$p.value)
result <- ifelse(pval <= 0.05, "R", "F")
len <- length(which(result == "R"))/k
assign(paste("SB", i, sep="."), len)
}
print(SB.7)
print(SB.28)
print(SB.49)
table8 <- rbind("Two-tailed sign test" = c(SA.7, SA.28, FA.49),
"Sign rank test" = c(SB.7, SB.28, SB.49))
colnames(table8) <- c("Sample Size 7", "Sample Size 28", "Sample Size 49")
print(table8)
table8 <- rbind("Two-tailed sign test" = c(SA.7, SA.28, SA.49),
"Sign rank test" = c(SB.7, SB.28, SB.49))
colnames(table8) <- c("Sample Size 7", "Sample Size 28", "Sample Size 49")
print(table8)
