#not ideal, too much information can be confusing.  You should think about the balance between being
#informative about the distrubutions but sensitive to the fact that you are comparing across many distributions.
#this should be done in a single pipeline.
library(tidyverse)
flights <- read_csv('flights_jan.csv')
flights %>% mutate("Weekend" = ((flights["DAY_OF_WEEK"] > 5) = 1)) %>% ggplot(aes(factor(Weekend), TAXI_OUT)) +  geom_violin()
flights %>% filter(DAY_OF_WEEK <= 5) %>% mutate("Weekday" = 1) %>%
ggplot(aes(factor(Weekday), TAXI_OUT)) +  geom_violin() +
geom_violin(draw_quantiles=c(.25, .5, .75), scale="count")
goalies %>%
filter(year > 2000) %>%
inner_join(master_file, by=c("playerID" = "playerID")) %>%
filter(birthYear < 1974) %>%
mutate(ratioGA = SA/GA) %>%
mutate(ratioPGA = PostSA/PostGA)%>%
group_by(playerID) %>%
arrange(playerID, desc(year))%>%
#mutate(yearContinuity = lag(year)) %>%
mutate(better = ratioGA/ratioPGA) %>%
#select(playerID, year, yearContinuity, ratioGA, ratioPGA, better) %>%
mutate(continuation = (lag(better) < better)) %>%
select(playerID, year, ratioGA, ratioPGA, better, continuation, tmID) %>%
filter(continuation == TRUE) %>%
distinct(playerID, tmID) %>%
inner_join(teamvteam, by=c("tmID"="tmID")) %>%
filter(year > 2000) %>%
filter(oppID == "PIT", W >=3) %>%
distinct(playerID, tmID, year) %>%
left_join(coaches, by= c("year"="year", "tmID" = "tmID")) %>%
distinct(tmID, year, coachID) %>%
left_join(master_file, by=c("coachID"="coachID", "playerID"="playerID"))
goalies %>%
filter(year > 2000) %>%
inner_join(master_file, by=c("playerID" = "playerID")) %>%
filter(birthYear < 1974) %>%
mutate(ratioGA = SA/GA) %>%
mutate(ratioPGA = PostSA/PostGA)%>%
group_by(playerID) %>%
arrange(playerID, desc(year))%>%
#mutate(yearContinuity = lag(year)) %>%
mutate(better = ratioGA/ratioPGA) %>%
#select(playerID, year, yearContinuity, ratioGA, ratioPGA, better) %>%
mutate(continuation = (lag(better) < better)) %>%
select(playerID, year, ratioGA, ratioPGA, better, continuation, tmID) %>%
filter(continuation == TRUE) %>%
distinct(playerID, tmID) %>%
inner_join(teamvteam, by=c("tmID"="tmID")) %>%
filter(year > 2000) %>%
filter(oppID == "PIT", W >=3) %>%
distinct(playerID, tmID, year) %>%
left_join(coaches, by= c("year"="year", "tmID" = "tmID")) %>%
distinct(tmID, year, coachID) %>%
left_join(master_file, by=c("coachID"="coachID", "playerID"="playerID"))
#please only load the tidyverse library
library(tidyverse)
master_file <- read_csv('Master.csv')
goalies <- read_csv('Goalies.csv')
coaches <- read_csv('Coaches.csv')
teamvteam <- read_csv('TeamVsTeam.csv')
#please only load the tidyverse library
library(tidyverse)
#please read in the files as below.  Your code must
#run and produce the result.  If your code does not
#run on the TAs computer your HW solution will not
#be accepted.
setwd("./")
master_file <- read_csv('Master.csv')
library(tidyverse)
setwd("./")
setwd("/Users/maxryoo/Documents/Spring 2019/STAT4310/HW2")
airline <- read_csv('airlines.csv')
flightsjan <- read_csv('flights_jan.csv')
airline %>% arrange(IATA_CODE)
flightsjan
names(flightsjan)
## Problem 1
### Part a
airline %>%
inner_join(flightsjan,  by=c("IATA_CODE"="AIRLINE")) %>%
group_by(AIRLINE) %>%
mutate(flightnum = n()) %>%
inner_join(top_n(count(flightsjan, AIRLINE),10),by=c("IATA_CODE"="AIRLINE")) %>%
#arrange(desc(n)) %>%
mutate(distance =  ifelse(DISTANCE > 750, TRUE, FALSE)) %>%
ggplot(aes(fct_reorder(IATA_CODE, flightnum, .desc=TRUE),
TAXI_OUT,
color=distance,
fill=ALLIANCE)) +
geom_boxplot(varwidth = TRUE) +
scale_x_discrete(labels=(top_n(count(flightsjan, AIRLINE),10))) +
scale_fill_manual(values=c("#339933","red","#7300e6","white")) +
theme_bw() +
xlab('Airline (ordered by total number of flights)') +
ylab("Taxi time (variable: TAXI_OUT)") +
theme(panel.border = element_blank()) +
labs(color='distance > 750') +
labs(fill='alliance')
### Part b
#There seems to be a lot of information in the plot that we replicated.
#To some degree it can be seen that it is a little of too much information.
#There are too many messages trying to displayed, which might hinder a strong
#message that we were trying to tell. Looking at aspects individually, they all
#display a clear message. For example take alliance and distance > 750. The alliance
#for the fill of the box plot could be used to see how the Taxi time differs by
#which airlines have which alliance. If there was a strong trend it would be easy
#to see by having the alliance separated by colors. Also, another good aesthetic was
#the distance > 750. This was good in a sense that it was separated by airline.
#If we wanted to see which airlines had a higher taxi time based on distance,
#the information was easily distinguishable. However, something like the overall for
#all airlines will be hard to picture. There were more aesthetics used and all
#had their purpose. However, having all of these aesthetics takes away from the big
#picture. What does the reader get out of the graph? The graph has too many messages
#that the reader doesn’t get a clear message. A good strategy to improve the graph might
#be to simplify the graph down for the purpose of the visualization. If the focus is
#on a certain aspect, trying to display that aspect might be a better idea.
### Part c
airline %>%
inner_join(flightsjan,  by=c("IATA_CODE"="AIRLINE")) %>%
group_by(AIRLINE) %>%
mutate(flightnum = n()) %>%
inner_join(top_n(count(flightsjan, AIRLINE),14),by=c("IATA_CODE"="AIRLINE")) %>%
#arrange(desc(n)) %>%
mutate(distance =  ifelse(DISTANCE > 750, "Distance above 750", "Distance below 750")) %>%
ggplot(aes(fct_reorder(IATA_CODE, flightnum, .desc=TRUE),
TAXI_OUT,
fill=ALLIANCE)) +
geom_boxplot(varwidth = TRUE) +
facet_grid(.~distance) +
scale_x_discrete(labels=(top_n(count(flightsjan, AIRLINE),10))) +
theme_bw() +
scale_fill_manual(values=c("#339933","red","#7300e6","white")) +
xlab('Airline (ordered by total number of flights)') +
ylab("Taxi time (variable: TAXI_OUT)") +
theme(panel.border = element_blank()) +
theme(legend.position="none") +
labs(color='distance > 750')
## Problme 2
### Part a
museum <- read_csv('museums.csv')
museum %>%
na.omit() %>%
filter(State != "alaska") %>%
filter(State != "hawaii") %>%
filter(Longitude > (-150)) %>%
filter(Latitude < 60) %>%
filter(Revenue > 0) %>%
ggplot() +
geom_point(aes(x=Longitude, y=Latitude, color= Revenue)) +
scale_colour_gradient(low="red",
high="yellow",
limit = c(1,1e+9),
breaks = c(0,1e+3,1e+6,1e+9),
trans="log2") +
theme_bw() +
theme(panel.background = element_rect(fill = 'BLACK')) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
### Part b
#The main aesthetic being used is the color of the geom_points being based on the Revenue
#int he data set. As you can see in the image legend the revenue ranges from the color red
#and yellow. The data underwent a log2 transformation to accurately represent the data points.
#At a first glance, it is hard to make a story out of the image. A clear message is hard to
#point out. Which states had the highest revenue? Is there a place or location that had a higher
#revenue? This was because the majority of museums were orange and bright yellow. The data
#points were not that varied. Also there was no distinction of the United States borders. Where
#do the states end. It seemed like there was no real use for spacial locality for he purpose of
#this visualization. The message was hard to understand as well. A possibility if wanting to
#keep location a key factor, could be showing the state borders and categorizing the museums
#by states and getting a mean value to compare the state’s museums. This way it can be a more
#clear image and message.
### Part c
library(maps)
library(mapproj)
us_data <- map_data("state")
names(museum)
count(museum, State)$State
us_data %>%
inner_join(count(museum,State), by=c("region"="State")) %>%
ggplot(aes(long,lat,group=group,fill=n)) + geom_polygon(color="black")
museum %>%
group_by(State) %>%
filter(Revenue > 0) %>%
summarize(avg = log2(mean(Revenue)))%>%
inner_join(us_data, by=c("State"="region")) %>%
ggplot(aes(long,lat,group=group,fill=avg)) +
geom_polygon(color="black") +
scale_fill_gradient(low="red",
high="yellow",
limit = c(15,30),
breaks = c(0,20,22.5,25,27.5)) +
theme_bw() +
theme(panel.background = element_rect(fill = 'BLACK')) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
labs(title="Average Revenue by State")
## Problme 3
### Part a
library(wordcloud2)
setwd("/Users/maxryoo/Documents/Spring 2019/STAT4310/HW2/emnlp2014_ageGenderLexica")
emnlp14age <- read_csv("emnlp14age.csv")
#old people
emnlp14age %>%
filter(weight >0) %>%
arrange(desc(weight)) %>%
top_n(150) %>%
wordcloud2(size=0.4)
#young people
emnlp14age %>%
filter(weight < 0) %>%
mutate(weight = abs(weight)) %>%
arrange(desc(weight)) %>%
top_n(100)  %>%
wordcloud2(size=0.2)
### Threshold comments
#The numbers of words used for the two word clouds were different. The word cloud for old
#people used to top 150 words. I chose this threshold because after a while the extra words
#didn’t seem to matter. Having 50 or 100 words the eye still catches the majority of the
#words because their size doesn’t differ by a big factor. However, at 150 the new couple of
#words that come up change drastically in size and the eye doesn’t catch those words as
#easily since the size difference is substantial. 200 was overkill in a sense that at 150
#people wouldn’t care about the remainder of the words and 200 words would just add useless
#words to fill up white space. Therefore 150 was chosen for old people. However, for young
#people, 100 was chosen. This was because the weights of the words were similar and the logic
#explained for old people was applicable with the threshold of 100.
### Part b
emnlp14age %>%
filter(weight < 0) %>%
mutate(weight = abs(weight)**2) %>%
arrange(desc(weight)) %>%
top_n(200)  %>%
wordcloud2(size=0.3)
museum <- read_csv('museums.csv')
museum %>%
na.omit() %>%
filter(State != "alaska") %>%
filter(State != "hawaii") %>%
filter(Longitude > (-150)) %>%
filter(Latitude < 60) %>%
filter(Revenue > 0) %>%
ggplot() +
geom_point(aes(x=Longitude, y=Latitude, color= Revenue)) +
scale_colour_gradient(low="red",
high="yellow",
limit = c(1,1e+9),
breaks = c(0,1e+3,1e+6,1e+9),
trans="log2") +
theme_bw() +
theme(panel.background = element_rect(fill = 'BLACK')) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
library(maps)
library(mapproj)
us_data <- map_data("state")
names(museum)
count(museum, State)$State
museum %>%
group_by(State) %>%
filter(Revenue > 0) %>%
summarize(avg = log2(mean(Revenue)))%>%
inner_join(us_data, by=c("State"="region")) %>%
ggplot(aes(long,lat,group=group,fill=avg)) +
geom_polygon(color="black") +
scale_fill_gradient(low="red",
high="yellow",
limit = c(15,30),
breaks = c(0,20,22.5,25,27.5)) +
theme_bw() +
theme(panel.background = element_rect(fill = 'BLACK')) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
labs(title="Average Revenue by State")
museum
museum %>%
group_by(Type) %>%
ggplot(aes(Income, Revenue)) %>%
geom_smooth()
museum %>%
group_by(Type) %>%
ggplot(aes(Income, Revenue)) + geom_smooth()
museum %>%
na.omit() %>%
filter(State != "alaska") %>%
filter(State != "hawaii") %>%
filter(Longitude > (-150)) %>%
filter(Latitude < 60) %>%
filter(Revenue > 0) %>%
ggplot() +
geom_point(aes(x=Longitude, y=Latitude, color= Revenue)) +
scale_colour_gradient(low="red",
high="yellow",
limit = c(1,1e+9),
breaks = c(0,1e+3,1e+6,1e+9),
trans="log2") +
theme_bw() +
theme(panel.background = element_rect(fill = 'BLACK')) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
## Problem 1
### Part a
airline %>%
inner_join(flightsjan,  by=c("IATA_CODE"="AIRLINE")) %>%
group_by(AIRLINE) %>%
mutate(flightnum = n()) %>%
inner_join(top_n(count(flightsjan, AIRLINE),10),by=c("IATA_CODE"="AIRLINE")) %>%
#arrange(desc(n)) %>%
mutate(distance =  ifelse(DISTANCE > 750, TRUE, FALSE)) %>%
ggplot(aes(fct_reorder(IATA_CODE, flightnum, .desc=TRUE),
TAXI_OUT,
color=distance,
fill=ALLIANCE)) +
geom_boxplot(varwidth = TRUE) +
scale_x_discrete(labels=(top_n(count(flightsjan, AIRLINE),10))) +
scale_fill_manual(values=c("#339933","red","#7300e6","white")) +
theme_bw() +
xlab('Airline (ordered by total number of flights)') +
ylab("Taxi time (variable: TAXI_OUT)") +
theme(panel.border = element_blank()) +
labs(color='distance > 750') +
labs(fill='alliance')
museum %>%
group_by(Type) %>%
mutate(trans = log2(Revenue)) %>%
ggplot(aes(Income, Revenue)) + geom_smooth()
install.packages("leaflet")
museum %>%
mutate(rev = log2(Revenue))
museum %>%
mutate(rev = log2(Revenue)) %>%
mutate(inc = log2(Income))
museum %>%
mutate(rev = log2(Revenue)) %>%
mutate(inc = log2(Income)) %>%
group_by(Type) %>%
ggplot(aes(rev, inc)) + geom_point()
museum %>%
mutate(rev = log2(Revenue)) %>%
mutate(inc = log2(Income)) %>%
group_by(Type) %>%
ggplot(aes(rev, inc, fill=Type, color=Type)) + geom_point()
install.packages("geojsonio")
museum %>%
mutate(rev = log2(Revenue)) %>%
mutate(inc = log2(Income)) %>%
group_by(Type) %>%
ggplot(aes(rev, inc, fill=Type, color=Type)) + geom_smooth()
museum %>%
mutate(rev = log2(Revenue)) %>%
mutate(inc = log2(Income)) %>%
group_by(Type) %>%
ggplot(aes(rev, inc, fill=Type, color=Type)) + geom_line()
museum %>%
mutate(rev = log2(Revenue)) %>%
mutate(inc = log2(Income)) %>%
group_by(Type) %>%
ggplot(aes(rev, inc, fill=Type, color=Type)) + geom_smooth(method=lm, se=F)
museum %>%
mutate(rev = log2(Revenue)) %>%
mutate(inc = log10(Income)) %>%
group_by(Type) %>%
ggplot(aes(rev, inc, fill=Type, color=Type)) + geom_smooth(method=lm, se=F)
2
museum %>%
mutate(rev = log2(Revenue)) %>%
mutate(inc = log2(Income)) %>%
group_by(Type) %>%
ggplot(aes(rev, inc, fill=Type, color=Type)) + geom_smooth(method=lm, se=F)
ohtheplacesIgo <- data.frame(long=c(-78.5069, -78.507),
lati=c(38.033, 38.0333), loc_name=c("my office", "class"))
leaflet(data=ohtheplacesIgo) %>% addTiles() %>%
addMarkers(lng=~long, lat=~lati, popup=~loc_name)
library(leaflet)
ohtheplacesIgo <- data.frame(long=c(-78.5069, -78.507),
lati=c(38.033, 38.0333), loc_name=c("my office", "class"))
leaflet(data=ohtheplacesIgo) %>% addTiles() %>%
addMarkers(lng=~long, lat=~lati, popup=~loc_name)
leaflet(data=ohtheplacesIgo) %>% addTiles() %>%
addMarkers(lng=~long, lat=~lati, popup= ~loc_name, label=~loc_name)
ohtheplacesIgo <- data.frame(long=c(-78.5069, -78.507),
lati=c(38.033, 38.0333),
loc_details=c(paste(sep = "<br/>",
"Rodu",
"<b><a href='mailto:jsr6q@virginia.edu'>email me</a></b>",
"412-982-2150"
), "class"))
leaflet(data=ohtheplacesIgo) %>% addTiles() %>%
addMarkers(lng=~long, lat=~lati, popup=~loc_details)
library(geojsonio)
#downloaded from https://catalog.data.gov/dataset?res_format=GeoJSON
bike_crashes <- geojson_read("bicycle-crash-data-chapel-hill-region.geojson",
what="sp")
library(geojsonio)
install.packages("geojsonio")
library(geojsonio)
#downloaded from https://catalog.data.gov/dataset?res_format=GeoJSON
bike_crashes <- geojson_read("bicycle-crash-data-chapel-hill-region.geojson",
what="sp")
#downloaded from https://catalog.data.gov/dataset?res_format=GeoJSON
bike_crashes <- geojson_read("bicycle-crash-data-chapel-hill-region.geojson",
what="sp")
#downloaded from https://catalog.data.gov/dataset?res_format=GeoJSON
bike_crashes <- geojson_read("bicycle-crash-data-chapel-hill-region.geojson",
what="sp")
library(geojsonio)
museum %>%
mutate(rev = log2(Revenue)) %>%
mutate(inc = log2(Income)) %>%
group_by(Type) %>%
ggplot(aes(rev, inc, fill=Type, color=Type)) + geom_smooth(method=lm, se=F)
museum %>%
mutate(rev = log2(Revenue)) %>%
mutate(inc = sqrt(Income)) %>%
group_by(Type) %>%
ggplot(aes(rev, inc, fill=Type, color=Type)) + geom_smooth(method=lm, se=F)
museum %>%
mutate(rev = sqrt(Revenue)) %>%
mutate(inc = sqrt(Income)) %>%
group_by(Type) %>%
ggplot(aes(rev, inc, fill=Type, color=Type)) + geom_smooth(method=lm, se=F)
museum %>%
mutate(rev = (Revenue)**3) %>%
mutate(inc = sqrt(Income)) %>%
group_by(Type) %>%
ggplot(aes(rev, inc, fill=Type, color=Type)) + geom_smooth(method=lm, se=F)
museum %>%
mutate(rev = (Revenue)**3) %>%
mutate(inc = (Income)**3) %>%
group_by(Type) %>%
ggplot(aes(rev, inc, fill=Type, color=Type)) + geom_smooth(method=lm, se=F)
museum %>%
mutate(rev = (Revenue)**5) %>%
mutate(inc = (Income)**5) %>%
group_by(Type) %>%
ggplot(aes(rev, inc, fill=Type, color=Type)) + geom_smooth(method=lm, se=F)
museum %>%
mutate(rev = (Revenue)**2) %>%
mutate(inc = (Income)**2) %>%
group_by(Type) %>%
ggplot(aes(rev, inc, fill=Type, color=Type)) + geom_smooth(method=lm, se=F)
museum %>%
mutate(rev = (Revenue)**2) %>%
mutate(inc = (Income)**2) %>%
group_by(Type) %>%
ggplot(aes(rev, inc, fill=Type, color=Type)) + geom_smooth(method=lm, se=F) +
theme_bw() +
## Problme 3
### Part a
library(wordcloud2)
museum %>%
mutate(rev = (Revenue)**2) %>%
mutate(inc = (Income)**2) %>%
group_by(Type) %>%
ggplot(aes(rev, inc, fill=Type, color=Type)) + geom_smooth(method=lm, se=F) +
theme_bw()
museum %>%
mutate(rev = (Revenue)**2) %>%
mutate(inc = (Income)**2) %>%
group_by(Type) %>%
ggplot(aes(rev, inc, fill=Type, color=Type)) + geom_smooth(method=lm, se=F) +
theme_bw() +
theme(legend.key.size = 0.2)
museum %>%
mutate(rev = (Revenue)**2) %>%
mutate(inc = (Income)**2) %>%
group_by(Type) %>%
ggplot(aes(rev, inc, fill=Type, color=Type)) + geom_smooth(method=lm, se=F) +
theme_bw()
museum %>%
mutate(rev = (Revenue)**2) %>%
mutate(inc = (Income)**2) %>%
group_by(Type) %>%
ggplot(aes(inc, rev, fill=Type, color=Type)) + geom_smooth(method=lm, se=F) +
theme_bw()
museum %>%
mutate(rev = (Revenue)**2) %>%
mutate(inc = (Income)**2) %>%
group_by(Type) %>%
ggplot(aes(inc, rev, fill=Type, color=Type)) + geom_smooth(method=lm, se=F) +
theme_bw() +
xlab("Income")
museum %>%
mutate(rev = (Revenue)**2) %>%
mutate(inc = (Income)**2) %>%
group_by(Type) %>%
ggplot(aes(inc, rev, fill=Type, color=Type)) + geom_smooth(method=lm, se=F) +
theme_bw() +
xlab("Income") +
ylab("Revenue")
